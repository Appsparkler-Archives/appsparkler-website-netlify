{"version":3,"sources":["components/ShowHide.js","components/CustomLabel/index.js","components/CustomLabel/variantA.js","apps/PunchCardApp/PunchCard/GoalForTheDayForm/index.js","components/DetailsListWithText/index.js","apps/PunchCardApp/shared.js","apps/PunchCardApp/PunchCard/PunchInTimeCell/index.js","apps/PunchCardApp/PunchCard/PunchOutCell/index.js","apps/PunchCardApp/PunchCard/PunchedSlots/index.js","apps/PunchCardApp/PunchCard/PunchCardButtons/AddScheduledSlotButton/AddScheduledSlotPanel/ScheduledSlotForm/index.js","apps/PunchCardApp/PunchCard/PunchCardButtons/AddScheduledSlotButton/AddScheduledSlotPanel/index.js","apps/PunchCardApp/PunchCard/PunchCardButtons/AddScheduledSlotButton/index.js","apps/PunchCardApp/PunchCard/PunchCardButtons/index.js","apps/PunchCardApp/PunchCard/Spinner/index.js","apps/PunchCardApp/PunchCard/ScheduledSlots/index.js","apps/PunchCardApp/PunchCard/Progress/index.js","apps/PunchCardApp/PunchCard/InfoBar/index.js","apps/PunchCardApp/PunchCard/index.js","apps/PunchCardApp/NewPunchCardForm/index.js","apps/PunchCardApp/ShowPunchCardsButton/PunchCardsPanel/PunchCards/index.js","apps/PunchCardApp/ShowPunchCardsButton/PunchCardsPanel/index.js","apps/PunchCardApp/ShowPunchCardsButton/index.js","apps/PunchCardApp/index.js","db.js","App.js","reportWebVitals.js","index.js"],"names":["ShowHide","show","children","propTypes","PropTypes","bool","any","defaultProps","React","memo","CustomLabel","showCallout","label","iconButton","labelWrapperStack","contentWrapperStack","calloutContent","callout","Stack","Label","IconButton","Callout","CustomLabelVariantA","customLabelVariantA","args","content","iconButtonId","useId","useBoolean","toggleCallout","toggle","horizontal","verticalAlign","tokens","childrenGap","maxWidth","target","onDismiss","id","styles","root","marginBottom","title","iconProps","iconName","onClick","useCallback","padding","Text","variant","useCustomLabelVariantA","GoalForTheDayFormLayout","text0","form","maskedTextField0","maskedTextField1","MaskedTextField","classNames","mergeStyleSets","textField","onRenderLabel","props","onClickSelection","evt","elem","select","isInRange","min","max","value","numberVal","Number","isNaN","isLessThanMin","isGreaterThanMax","GoalForTheDayForm","onChangeGoal","hours","minutes","useState","className","mask","errorMessage","state","setState","updateErrorMessageOnMinutes","useMemo","_debounce","currentState","_set","debounceUpdateTextField0","update","updateTextField0","goalForTheDayForm","onSubmit","preventDefault","stopPropagation","onChange","cancel","useEffect","is24","disabled","DetailsListWithText","detailsList","text","DetailsList","items","Name","FORMAT","selectTimeInDate","startPos","endPos","selectionStart","selectionEnd","selectInputText","messages","PunchInTimeCellLayout","tooltipHost0","TooltipHost","PunchInTimeCell","onError","punchInTimeCellLayout","Boolean","String","match","moment","isValid","PunchOutTimeCellLayout","showTextField","tooltipHost","primaryButton0","PrimaryButton","primaryButton0Icon","transform","PunchOutTimeCell","punchOutTimeCell","paddingTop","minWidth","display","verifyNewOutTime","newOutTime","modifiedItems","verifyIsGreaterThanNow","newOutTimeMoment","modifiedItem","_findIndex","item","inTime","nextItemIndex","mItem","nextItem","verifyNewInTime","slots","newInTime","newInTimeMoment","itemIndex","fItem","prevOutTime","outTime","valueOf","PunchedSlots","onUpdatePunchSlot","selectionMode","SelectionMode","none","columns","uuid","key","name","fieldName","isResizable","onRender","punchInTimeCell","detailsListWithText","length","updateDetailsList","updateDetailsListItem","updatedItems","map","_merge","idx","format","find","uItem","ScheduledSlotFormLayout","Item","onDateTimeFieldClick","getInitialValue","add","startOf","ScheduledSlotForm","required","type","updateMaskedTextField0Value","updateMaskedTextField1Value","resetFields","scheduledSlotForm","startEndTime","inTimeMoment","outTimeMoment","isoutTimeGreaterThaninTime","momentsAreValid","getIsOk2Submit","AddScheduledSlotPanelLayout","panel","Panel","AddScheduledSlotPanel","isOpen","addScheduledSlotPanel","onAddScheduledSlot","isLightDismiss","headerText","AddScheuduledSlotButtonLayout","defaultButton","AddScheduledSlotButton","updateAddScheduledSlotPanel","addScheduledSlotButton","PunchCardButtonsLayout","primaryButton","PunchCardButtons","onClickPunchIn","punchInText","showIcon","punchInDisabled","punchCardButtons","SpinnerLayout","spinner","Spinner","InTextField","inTextField","OutTextField","outTextField","width","ScheduledSlots","onDeleteSlot","onChangeSlot","currenState","deleteIconButton","StatusEmoji","showFinishFlag","showScheduledFinishDot","Progress","punchedPercent","scheduledPercent","statusEmoji","horizontalAlign","style","height","role","aria-valuenow","aria-valuemin","aria-valuemax","messageBar","InfoBarLayout","MessageBar","InfoBar","minutesLeft","hoursLeft","messageBarType","MessageBarType","info","infoBar","mins","prefix","Math","abs","h","floor","m","convertMinutesToHours","PunchCardLayout","punchedSlots","scheduledSlots","progress","dir","vertical","START_YOUR_DAY","PUNCH_IN","getMinutesFromSlots","reduce","loop","diff","PunchCard","goalForTheDay","onAddPunchedSlot","onDeleteScheduledSlot","onChangeScheduledSlot","goaInMinutes","punchedMinutes","scheduledMinutes","totalPercent","punchedProgress","scheduledProgress","updateSpinner","punchCard","updatedItem","a","updatedPunchSlotItems","console","error","numberOfItems","newPunchedSlot","Date","now","scheduledSlot","enablePunchInButton","deletedSlot","updatedSlots","filter","slot","updatedSlot","goalInMinutes","getGoalInMinutes","NewPunchCardFormLayout","textField0","iconButton0","TextField","NewPunchCardForm","placeholder","punchCardForm","trim","PunchCardListItemLayout","iconButton1","as","PunchCardListItemWithoutMemo","punchCardListItem","primary","onEdit","onDelete","PunchCardListItem","PunchCards","punchCards","Array","isArray","PunchCardsPanelLayout","punchCardsList","PunchCardsPanel","onDeletePunchCard","onSelectPunchCard","updatePunchCardsList","punchCardsPanel","ShowPunchCardsButtonLayout","defaultButotn0","DefaultButton","ShowPunchCardsButton","showPunchCardsButton","isOpenPanel","PunchCardAppLayout","selectedPunchCard","newPunchCardForm","PunchCardApp","onAddPunchCard","isOpenPunchCardsPanel","onDismissPunchCardPanel","onClickShowPunchCardsButton","onEditPunchCard","punchCardApp","punchCardName","db","Dexie","version","stores","open","App","newPunchCard","onOpenPunchCardPanel","delete","get","updatedPunchCards","log","toArray","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeIcons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad63235c.chunk.js","sourcesContent":["import  React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ShowHide = ({show, children})  => show && children;\n\nShowHide.propTypes = {\n  show: PropTypes.bool,\n  children:  PropTypes.any\n}\n\nShowHide.defaultProps  = {\n  show: true,\n  children: null\n}\n\nexport default React.memo(ShowHide)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Stack, IconButton, Callout,\n  Label\n} from '@fluentui/react'\nimport ShowHide from '../ShowHide'\n\nconst CustomLabel  = ({\n  showCallout, label,\n  iconButton, labelWrapperStack,\n  contentWrapperStack,\n  calloutContent,\n  callout\n}) => {\n  return (\n    <>\n      <Stack\n        {...labelWrapperStack}\n      >\n        <Label>\n          {label}\n        </Label>\n        <IconButton\n          {...iconButton}\n        />\n      </Stack>\n      <ShowHide show={showCallout}>\n        <Callout\n          {...callout}\n        >\n          <Stack {...contentWrapperStack}>\n            <span>\n              {calloutContent}\n            </span>\n          </Stack>\n        </Callout>\n      </ShowHide>\n    </>\n  )\n}\n\nCustomLabel.propTypes = {\n  labelWrapperStack: PropTypes.object,\n  label: PropTypes.string,\n  showCallout: PropTypes.bool,\n  iconButton: PropTypes.object,\n}\n\nexport default React.memo(CustomLabel);\n","import React from 'react'\nimport {Text} from '@fluentui/react'\nimport {useId, useBoolean} from '@uifabric/react-hooks'\nimport CustomLabel from './'\nimport PropTypes from 'prop-types'\n\nconst useCustomLabelVariantA = (args) => {\n  const  {\n    label = '',\n    content = ''\n  } = args\n  const iconButtonId = useId()\n  const [showCallout, {toggle: toggleCallout}] = useBoolean(false);\n  return {\n    labelWrapperStack: {\n      horizontal:  true,\n      verticalAlign: 'center',\n      tokens: {\n        childrenGap: 4,\n        maxWidth: 300,\n      }\n    },\n    label,\n    callout: {\n      target: `#${iconButtonId}`,\n      onDismiss: toggleCallout\n    },\n    iconButton: {\n      id: iconButtonId,\n      styles: {\n        root: {\n          marginBottom: -3,\n        }\n      },\n      title: 'Info',\n      iconProps: {\n        iconName: 'Info'\n      },\n      onClick: React.useCallback(() => {\n        toggleCallout()\n      },[toggleCallout])\n    },\n    showCallout,\n    contentWrapperStack: {\n      styles: { root: {\n        padding: 10,\n        maxWidth: 200\n      } },\n    },\n    calloutContent: (\n      <Text variant=\"small\">\n        {content}\n    </Text>)\n  }\n}\n\nconst CustomLabelVariantA = ({\n  label, content\n}) => {\n  const customLabelVariantA = useCustomLabelVariantA({\n    label, content\n  })\n  return (\n    <CustomLabel {...customLabelVariantA}/>\n  )\n};\n\nCustomLabelVariantA.propTypes = {\n  label: PropTypes.string,\n  content: PropTypes.string\n}\n\nexport default React.memo(CustomLabelVariantA)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  MaskedTextField, Stack,\n  Text, mergeStyleSets\n} from '@fluentui/react'\nimport _set from 'lodash/set'\nimport _debounce from 'lodash/debounce'\nimport CustomLabel from '../../../../components/CustomLabel/variantA'\n\nconst GoalForTheDayFormLayout = ({\n  text0, form,\n  maskedTextField0, maskedTextField1\n}) => (\n  <form {...form}>\n      <Text {...text0}/>\n      <Stack horizontal tokens={{childrenGap: 5}}>\n        <MaskedTextField {...maskedTextField0} />\n        <MaskedTextField {...maskedTextField1} />\n      </Stack>\n  </form>\n)\n\nconst classNames = mergeStyleSets({\n  textField: {\n    maxWidth: 90\n  }\n})\n\nconst onRenderLabel = (props) => <CustomLabel {...props}/>\n\nconst onClickSelection = (evt) => {\n  const elem = evt.target;\n  elem.select();\n  elem.select(0, 99999);\n}\n\nexport const isInRange = ({\n  min, max, value\n}) => {\n  const numberVal = Number(value, 10);\n  const isNumber = !isNaN(numberVal);\n  if(isNumber) {\n    const isLessThanMin = numberVal < Number(min);\n    const isGreaterThanMax = numberVal > Number(max);\n    return !isLessThanMin && !isGreaterThanMax;\n  } else {\n    return false;\n  }\n}\n\nexport const getGoalInMinutes = ({hours, minutes}) => {\n  const isHoursNaN  = isNaN(Number(hours));\n  const isMinutesNaN = isNaN(Number(minutes));\n  const isAnyNaN = isHoursNaN || isMinutesNaN\n  if(isAnyNaN) return 0;\n  const goalInMinutes =  (Number(hours) * 60) + (Number(minutes));\n  return goalInMinutes;\n}\n\nconst GoalForTheDayForm = ({\n  onChangeGoal, hours, minutes\n}) => {\n  const [state, setState] = React.useState({\n    text0: {\n      children: '🎯Goal For The Day',\n      variant: 'mediumPlus',\n    },\n    maskedTextField0: {\n      className: classNames.textField,\n      content: 'A value between 00 and 24.',\n      mask: '99',\n      label: 'Hours',\n      onClick: onClickSelection,\n      onRenderLabel,\n      errorMessage: ''\n    },\n    maskedTextField1: {\n      className: classNames.textField,\n      content: 'A value between 00 and 59.',\n      mask: '99',\n      label: 'Minutes',\n      onClick: onClickSelection,\n      onRenderLabel\n    }\n  });\n\n  const updateErrorMessageOnMinutes = React.useMemo(() => {\n    return _debounce((errorMessage) => {\n      setState(currentState => {\n        const updatedState = _set(\n          {...currentState},\n          'maskedTextField1.errorMessage',\n          errorMessage\n        )\n        return updatedState;\n      })\n    }, 800);\n  }, [])\n\n  const debounceUpdateTextField0 = React.useMemo(() => {\n    return _debounce((update) => {\n      setState(currentState => ({\n        ...currentState,\n        maskedTextField0: {\n          ...currentState.maskedTextField0,\n          ...update\n        }\n      }))\n    }, 800);\n  }, []);\n\n  const updateTextField0 = React.useCallback((update) => {\n    setState(currentState => ({\n      ...currentState,\n      maskedTextField0: {\n        ...currentState.maskedTextField0,\n        ...update\n      }\n    }))\n  },[])\n\n  const goalForTheDayForm = {\n    form: {\n      onSubmit: React.useCallback((evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n      },[])\n    },\n    text0: {\n      ...state.text0\n    },\n    maskedTextField0: {\n      value: hours,\n      ...state.maskedTextField0,\n      onChange: React.useCallback((evt, hours) => {\n        const isValid = isInRange({\n          min: 0,\n          max: 24,\n          value: hours\n        })\n        if(isValid) {\n          debounceUpdateTextField0.cancel();\n          updateTextField0({\n            errorMessage: '',\n          })\n          onChangeGoal({hours})\n        } else {\n          debounceUpdateTextField0({\n            errorMessage: '00 - 24',\n          })\n        }\n      },[debounceUpdateTextField0, updateTextField0, onChangeGoal])\n    },\n    maskedTextField1: {\n      value: minutes,\n      ...state.maskedTextField1,\n      onChange: React.useCallback((evt, value) => {\n        const isValid = isInRange({\n          min: 0,\n          max: 59,\n          value\n        })\n        if(isValid) {\n          onChangeGoal({\n            minutes: value\n          })\n          updateErrorMessageOnMinutes('');\n        } else {\n          updateErrorMessageOnMinutes('00 - 59')\n        }\n      }, [updateErrorMessageOnMinutes, onChangeGoal])\n    }\n  }\n\n  /**\n    Disable Minutes-text-field when 24 hours set\n  */\n  React.useEffect(() => {\n    const is24 = Number(hours) === 24;\n    setState(currentState => ({\n      ...currentState,\n      maskedTextField1: {\n        ...currentState.maskedTextField1,\n        disabled: is24,\n      }\n    }))\n    if(is24) {\n      onChangeGoal({\n        minutes: '00'\n      })\n    }\n  }, [hours, onChangeGoal])\n\n  return (\n    <GoalForTheDayFormLayout {...goalForTheDayForm} />\n  )\n}\n\nGoalForTheDayForm.propTypes = {\n  onChangeGoal: PropTypes.func,\n  hours: PropTypes.string,\n  minutes: PropTypes.string\n}\n\nGoalForTheDayForm.defaultProps = {\n    hours: '09',\n    minutes: '02'\n}\n\nexport default React.memo(GoalForTheDayForm)\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {Stack, Text, DetailsList} from '@fluentui/react'\n\nconst DetailsListWithText = ({\n  show, detailsList, text\n}) => show && (\n  <Stack>\n    <Text {...text} />\n    <DetailsList {...detailsList}/>\n  </Stack>\n)\n\nDetailsListWithText.propTypes = {\n  /** hide/show the element */\n  show: PropTypes.bool,\n\n  /** [Click here](https://docs.microsoft.com/en-us/javascript/api/office-ui-fabric-react/idetailslistprops?view=office-ui-fabric-react-latest) a full  list of props. */\n  detailsList: PropTypes.object.isRequired,\n\n  /** [Click Here](https://docs.microsoft.com/en-us/javascript/api/office-ui-fabric-react/itextprops?view=office-ui-fabric-react-latest) for a full list of props */\n  text: PropTypes.object.isRequired\n}\n\nDetailsList.defaultProps = {\n  show: false,\n  detailsList: {\n    items: [\n      {Name: 'foo'},\n      {Name: 'bar'}\n    ]\n  },\n  text: {}\n}\n\nexport default React.memo(DetailsListWithText);\n","export const FORMAT = 'YYYY-MM-DD HH:mm'\n\nexport const selectInputText = ({\n  elem, startPos, endPos\n}) => {\n  elem.selectionStart = startPos;\n  elem.selectionEnd = endPos;\n}\n\nexport const selectTimeInDate = (elem) => selectInputText({\n  elem, startPos: 11, endPos: 16\n})\n\nexport const messages = {\n  START_YOUR_DAY: \"😇Start Your Day\",\n  PUNCH_IN: \"Punch In\"\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TooltipHost, MaskedTextField\n} from '@fluentui/react'\nimport moment from 'moment'\nimport {FORMAT, selectTimeInDate} from '../../shared'\n\n// TODO - rename this component to DateTimeTextField\nconst PunchInTimeCellLayout = ({\n  tooltipHost0, maskedTextField0,\n}) => (\n  <TooltipHost {...tooltipHost0}>\n    <MaskedTextField\n      {...maskedTextField0}\n    />\n  </TooltipHost>\n);\n\nconst PunchInTimeCell = ({\n  value, errorMessage,\n  onChange, onError\n}) => {\n  const [state] = React.useState({\n    tooltipHost0: {\n      content: `In ${FORMAT} format`\n    },\n    maskedTextField0: {\n      mask: '9999-99-99 99:99'\n    }\n  });\n\n  const punchInTimeCellLayout = {\n    tooltipHost0: {\n      ...state.tooltipHost0,\n    },\n    maskedTextField0: {\n      value, errorMessage,\n      ...state.maskedTextField0,\n      onClick: React.useCallback((evt) => {\n        const elem = evt.target;\n        selectTimeInDate(elem)\n      },[]),\n      onChange: React.useCallback((evt, value) => {\n        const isMasked = Boolean(String(value).match(/_/));\n        if(!isMasked) {\n          const isValid = moment(value, FORMAT).isValid();\n          if(isValid) {\n            onChange(value);\n          } else {\n            onError('invalid date/time');\n          };\n        }\n      },[onChange, onError]),\n    }\n  }\n\n  return (\n    <PunchInTimeCellLayout  {...punchInTimeCellLayout} />\n  )\n}\n\nPunchInTimeCell.propTypes = {\n  /** The value we want the component to display. */\n  value: PropTypes.string,\n  /** The error message we want the component to display*/\n  errorMessage: PropTypes.string,\n  /** The callback when a valid-date is entered by the user input. */\n  onChange: PropTypes.func,\n  /** This callback is triggerred when the user enters an invalid-date. */\n  onError: PropTypes.func,\n}\n\nexport default React.memo(PunchInTimeCell);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  MaskedTextField, PrimaryButton,\n  Stack,\n  TooltipHost, mergeStyleSets\n} from '@fluentui/react'\nimport moment from 'moment'\nimport {FORMAT, selectTimeInDate} from '../../shared'\n\nconst PunchOutTimeCellLayout = ({\n  showTextField, tooltipHost,\n  maskedTextField0, primaryButton0\n}) => showTextField ? (\n  <TooltipHost {...tooltipHost}>\n    <MaskedTextField {...maskedTextField0}/>\n  </TooltipHost>\n) : (\n  <Stack>\n    <PrimaryButton {...primaryButton0} />\n  </Stack>\n)\n\nconst classNames = mergeStyleSets({\n  primaryButton0Icon: {\n    transform: 'rotate(180deg)'\n  }\n})\n\nconst PunchOutTimeCell = ({\n  value,\n  onClick, onChange, onError,\n  errorMessage\n}) => {\n\n  const [state] = React.useState({\n    tooltipHost: {\n      content: `In ${FORMAT} format`\n    },\n    maskedTextField0: {\n      mask: '9999-99-99 99:99'\n    },\n    primaryButton0: {\n      text: 'Punch Out',\n      iconProps: {\n        className: classNames.primaryButton0Icon,\n        iconName: 'Leave'\n      },\n    }\n  });\n\n  const punchOutTimeCell = {\n    showTextField: Boolean(value),\n    tooltipHost: {\n      ...state.tooltipHost\n    },\n    maskedTextField0: {\n      ...state.maskedTextField0,\n      value, errorMessage,\n      onClick: React.useCallback((evt) => {\n        selectTimeInDate(evt.target)\n      },[]),\n      onChange: React.useCallback((evt, value) => {\n        const isMasked = Boolean(String(value).match(/_/));\n        if(!isMasked) {\n          const isValid = moment(value, FORMAT).isValid();\n          isValid ? onChange(value) : onError('invalid date/time');\n        }\n      },[onChange, onError])\n    },\n    primaryButton0: {\n      ...state.primaryButton0,\n      onClick\n    }\n  }\n\n  return <PunchOutTimeCellLayout {...punchOutTimeCell} />\n}\n\nPunchOutTimeCell.propTypes = {\n  value: PropTypes.string,\n  errorMessage: PropTypes.string,\n  onClick: PropTypes.func,\n  onChange: PropTypes.func,\n  onError: PropTypes.func\n}\n\nexport default React.memo(PunchOutTimeCell)\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport {v4 as uuid} from 'uuid'\nimport {\n  findIndex as _findIndex,\n  merge as _merge\n} from 'lodash'\nimport DetailsListWithText from '../../../../components/DetailsListWithText'\nimport PunchInTimeCell from '../PunchInTimeCell'\nimport PunchOutTimeCell from '../PunchOutCell'\nimport {FORMAT} from '../../shared'\nimport {\n  SelectionMode, mergeStyleSets,\n} from '@fluentui/react'\n\nconst classNames = mergeStyleSets({\n  detailsList: {\n    '.ms-DetailsList-headerWrapper': {\n      '.ms-FocusZone.ms-DetailsHeader': {\n        paddingTop: 0,\n        '.ms-DetailsHeader-cell': {\n          maxWidth: '50%',\n          minWidth: '50%'\n        }\n      }\n    },\n    '.ms-DetailsRow-fields': {\n      display: 'flex',\n      '.ms-DetailsRow-cell': {\n        maxWidth: '50%',\n        minWidth: '50%'\n      }\n    }\n  },\n})\n\n// TODO - Move this function to shared\nexport const verifyNewOutTime = ({\n    newOutTime,\n    modifiedItems,\n    id,\n    verifyIsGreaterThanNow = true\n  }) => {\n  const newOutTimeMoment = moment(newOutTime,  'YYYY-MM-DD HH:mm');\n  const itemIndex = _findIndex(modifiedItems, ({id:mId}) => mId === id);\n  const modifiedItem = modifiedItems[itemIndex]\n\n  /**invalidate if newOutTime is > current-time\n  is new-out-time > current-time */\n  if(verifyIsGreaterThanNow) {\n    const isGreater = newOutTimeMoment > moment()\n    if(isGreater) {\n      return {\n        isValid: false,\n        errorMessage: '> current-time'\n      }\n    }\n  }\n\n  /** invalidate if newOutTime < current-in-time */\n  const isOutTimeLessThanInTime = newOutTimeMoment < moment(modifiedItem.item.inTime)\n  if(isOutTimeLessThanInTime) {\n    return {\n      isValid: false,\n      errorMessage: `< in-time`\n    }\n  }\n\n  /** invalidate if outTime is > next-slot in time */\n  const indexOfItem = _findIndex(\n    modifiedItems,\n    mItem => mItem.id === id\n  )\n  const nextItemIndex = indexOfItem + 1;\n  const hasNextItem = Boolean(modifiedItems[nextItemIndex]);\n  if(hasNextItem) {\n    const nextItem = modifiedItems[nextItemIndex].item;\n    const isGreater = newOutTimeMoment > moment(nextItem.inTime);\n    if(isGreater) {\n      return {\n        isValid: false,\n        errorMessage: '> next-slot-in-time'\n      }\n    }\n  }\n\n  return {\n    isValid: true,\n  }\n}\n\n// TODO move this function to shared\nexport const verifyNewInTime = ({\n  slots, newInTime, item,\n  verifyIsGreaterThanNow = true\n}) => {\n  const newInTimeMoment = moment(newInTime, 'YYYY-MM-DD HH:mm');\n\n  // check if less than current time\n  if (verifyIsGreaterThanNow) {\n    const isGreaterThanCurrentTime = newInTimeMoment > moment();\n    if(isGreaterThanCurrentTime) {\n      return {\n        isValid: false,\n        errorMessage: '> than current-time'\n      }\n    }\n  }\n\n  // test IF the time is less than previos outTime IF there is\n  // a previous out time (newInTime should not be greater than previous out time)\n  const itemIndex = _findIndex(\n    slots,\n    fItem => item.id === fItem.id\n  )\n  if(itemIndex > 0) {\n    const previousItemIndex = itemIndex - 1;\n    const previousItem = slots[previousItemIndex].item;\n    const prevOutTime = previousItem.outTime;\n    const isPrevOutTimeLessThanNewInTime = newInTimeMoment.valueOf() <= prevOutTime;\n    if(isPrevOutTimeLessThanNewInTime) {\n      return {\n        isValid: false,\n        errorMessage: `< prev out`\n      }\n    }\n  }\n\n  // newInTime should be less than or equal to current outTime\n  const {outTime} = item.item;\n  if(outTime) {\n    const isOutTimeLessThanNewInTime = outTime <= newInTimeMoment.valueOf()\n    if(isOutTimeLessThanNewInTime) {\n      return {\n        isValid: false,\n        errorMessage: `> current out.`\n      }\n    }\n  }\n\n  // if not invalid; return isValid = true\n  return {\n    isValid: true\n  }\n}\n\nconst PunchedSlots = ({\n  items, onUpdatePunchSlot\n}) => {\n  const [state, setState] = React.useState({\n    text: {\n      children: '🕰️Punched Slots',\n      variant: 'mediumPlus'\n    },\n    detailsList: {\n      className: classNames.detailsList,\n      items: [],\n      selectionMode: SelectionMode.none,\n      columns: [\n        {\n          id: uuid(),\n          key: 'punch-in-time',\n          name: 'In Time',\n          fieldName: 'punchInTime',\n          isResizable: false,\n          onRender: ({punchInTimeCell}) => <PunchInTimeCell\n            {...punchInTimeCell}\n          />\n        },\n        {\n          id: uuid(),\n          key: 'punch-out-time',\n          name: 'Out Time',\n          fieldName: 'punchOutTime',\n          isResizable: false,\n          onRender: ({punchOutTimeCell}) => <PunchOutTimeCell {...punchOutTimeCell} />\n        }\n      ]\n    }\n  });\n\n  const detailsListWithText = {\n    show: React.useMemo(\n      () => Boolean(state.detailsList.items.length),\n      [state.detailsList.items.length]\n    ),\n    detailsList: {\n      ...state.detailsList\n    },\n    text: {\n      ...state.text\n    }\n  };\n\n  const updateDetailsList = React.useCallback((update) => {\n    setState((currentState) => ({\n      ...currentState,\n      detailsList: {\n        ...currentState.detailsList,\n        ...update\n      }\n    }))\n  },[])\n\n  const updateDetailsListItem = React.useCallback((update) => {\n    setState(currentState => {\n      const updatedItems = currentState\n        .detailsList\n        .items\n        .map((item) => {\n          if(update.id === item.id) {\n            return _merge(\n              item,\n              update\n            )\n          } else {\n            return item\n          }\n        })\n      return {\n        ...currentState,\n        detailsList: {\n          ...currentState.detailsList,\n          items: updatedItems\n        }\n      }\n    })\n  }, [])\n\n  /** Update DetailsList items when items are updated */\n  React.useEffect(() => {\n    const updatedItems = items.map((item, idx) => ({\n      item,\n      id: item.id,\n      punchInTimeCell: {\n        value: moment(item.inTime).format(FORMAT),\n        onChange: (newInTime) => {\n          const {\n            isValid,\n            errorMessage = ''\n          } = verifyNewInTime({\n            newInTime,\n            slots: updatedItems,\n            item: updatedItems.find(uItem => uItem.id === item.id)\n          })\n          updateDetailsListItem({\n            id: item.id,\n            punchInTimeCell: {\n              errorMessage\n            }\n          })\n          if(isValid) {\n            onUpdatePunchSlot({\n              id: item.id,\n              inTime: moment(newInTime, FORMAT).valueOf(),\n            })\n          }\n        },\n        onError: (errorMessage) => updateDetailsListItem({\n          id: item.id,\n          punchInTimeCell: {\n            errorMessage\n          }\n        })\n      },\n      punchOutTimeCell: {\n        value: item.outTime && moment(item.outTime).format(FORMAT),\n        onChange: (newOutTime) => {\n          const {\n            isValid, errorMessage = ''\n          } = verifyNewOutTime({\n            newOutTime,\n            modifiedItems: updatedItems,\n            id: item.id\n          })\n          updateDetailsListItem({\n            id: item.id,\n            punchOutTimeCell: {\n              errorMessage\n            }\n          })\n          if(isValid) {\n            onUpdatePunchSlot({\n              id: item.id,\n              outTime: moment(newOutTime, FORMAT).valueOf()\n            })\n          }\n        },\n        onError: (errorMessage) => {\n          updateDetailsListItem({\n            id: item.id,\n            punchOutTimeCell: {\n              errorMessage\n            }\n          })\n        },\n        onClick: () => {\n          onUpdatePunchSlot({\n            id: item.id,\n            outTime: moment().valueOf()\n          })\n        }\n      }\n    }));\n    updateDetailsList({\n      items: updatedItems\n    })\n  }, [\n    items, updateDetailsList,\n    updateDetailsListItem, onUpdatePunchSlot\n  ])\n\n  return <DetailsListWithText {...detailsListWithText} />\n}\n\nPunchedSlots.propTypes = {\n  items: PropTypes.array.isRequired,\n  onUpdatePunchSlot: PropTypes.func\n}\n\nexport default React.memo(PunchedSlots);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CustomLabelVariantA from '../../../../../../../components/CustomLabel/variantA'\nimport {\n  MaskedTextField, PrimaryButton,\n  Stack, mergeStyleSets\n} from '@fluentui/react'\nimport moment from 'moment'\nimport {v4 as uuid} from 'uuid'\n\nconst ScheduledSlotFormLayout = ({\n  form,\n  maskedTextField0, maskedTextField1,\n  primaryButton0\n}) => (\n  <form {...form}>\n    <Stack tokens={{childrenGap: 10 }}>\n      <Stack.Item>\n        <Stack horizontal tokens={{childrenGap: 5}}>\n          <MaskedTextField\n            {...maskedTextField0}\n          />\n          <MaskedTextField\n            {...maskedTextField1}\n          />\n        </Stack>\n      </Stack.Item>\n      <PrimaryButton\n        {...primaryButton0}\n      />\n    </Stack>\n  </form>\n);\n\nconst FORMAT = 'YYYY-MM-DD HH:mm'\n\nexport const getIsOk2Submit = ({\n  inTime, outTime\n}) => {\n  const FORMAT = 'YYYY-MM-DD HH:mm'\n  const inTimeMoment = moment(inTime, FORMAT);\n  const outTimeMoment = moment(outTime, FORMAT);\n  const isoutTimeGreaterThaninTime = outTimeMoment > inTimeMoment;\n  const momentsAreValid = inTimeMoment.isValid() && outTimeMoment.isValid();\n  const isOK2Submit = isoutTimeGreaterThaninTime && momentsAreValid;\n  if(isOK2Submit) {\n    return {\n      inTime: inTimeMoment.valueOf(),\n      outTime: outTimeMoment.valueOf()\n    }\n  }\n  return false;\n}\n\nconst onDateTimeFieldClick = (evt) => {\n  const elem = evt.target;\n  elem.selectionStart = 11;\n  elem.selectionEnd = 16;\n}\n\nconst getInitialValue = hours => moment()\n  .add(hours, 'hours')\n  .startOf('hour')\n  .format(FORMAT)\n\nconst ScheduledSlotForm = ({\n  onSubmit\n}) => {\n  const classNames = React.useMemo(() => mergeStyleSets({\n    textField: {\n      maxWidth: 130\n    }\n  }),[])\n\n  const [state, setState] = React.useState({\n    maskedTextField0: {\n      className: classNames.textField,\n      label:\"Start Time *\",\n      content:`In ${FORMAT} format...`,\n      required: true,\n      mask:\"9999-99-99 99:99\",\n      text:\"Hello\",\n      onRenderLabel:(props) => <CustomLabelVariantA {...props} />,\n      onClick: onDateTimeFieldClick,\n      value: getInitialValue(1),\n    },\n    maskedTextField1: {\n      className: classNames.textField,\n      label: \"End Time *\",\n      content: `In ${FORMAT} format...`,\n      required: true,\n      mask:\"9999-99-99 99:99\",\n      value: getInitialValue(2),\n      onClick: onDateTimeFieldClick,\n      onRenderLabel: (props) =>  <CustomLabelVariantA {...props} />\n    },\n    primaryButton0: {\n      type:\"submit\",\n      text:\"Add Slot\",\n      iconProps:{\n        iconName: 'Add'\n      }\n    }\n  });\n\n  const updateMaskedTextField0Value = React.useCallback((evt, value) => {\n    setState(currentState => ({\n      ...currentState,\n      maskedTextField0: {\n        ...currentState.maskedTextField0,\n        value\n      },\n    }))\n  },[])\n\n  const updateMaskedTextField1Value = React.useCallback((evt, value) => {\n    setState(currentState => ({\n      ...currentState,\n      maskedTextField1: {\n        ...currentState.maskedTextField1,\n        value\n      },\n    }))\n  },[])\n\n  const resetFields = React.useCallback(() => {\n    setState(currentState => ({\n      ...currentState,\n      maskedTextField0: {\n        ...currentState.maskedTextField0,\n        value: ''\n      },\n      maskedTextField1: {\n        ...currentState.maskedTextField1,\n        value: ''\n      },\n    }))\n  },[])\n\n  const scheduledSlotForm =  {\n    form: {\n      onSubmit: React.useCallback((evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        const startEndTime = getIsOk2Submit({\n          inTime: state.maskedTextField0.value,\n          outTime: state.maskedTextField1.value\n        });\n        if(startEndTime) {\n          onSubmit({\n            id: uuid(),\n            ...startEndTime\n          })\n          resetFields()\n        }\n      },[\n        onSubmit, resetFields,\n        state.maskedTextField0.value,\n        state.maskedTextField1.value,\n      ])\n    },\n    maskedTextField0: {\n      ...state.maskedTextField0,\n      onChange: updateMaskedTextField0Value\n    },\n    maskedTextField1: {\n      ...state.maskedTextField1,\n      onChange: updateMaskedTextField1Value\n    },\n    primaryButton0: {\n      ...state.primaryButton0\n    }\n  }\n\n  return <ScheduledSlotFormLayout {...scheduledSlotForm} />\n}\n\nScheduledSlotForm.propTypes = {\n  onSubmit: PropTypes.func\n};\n\nexport default React.memo(ScheduledSlotForm);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Panel} from '@fluentui/react'\nimport ScheduledSlotForm from './ScheduledSlotForm'\n\nconst AddScheduledSlotPanelLayout = ({\n  show, panel, scheduledSlotForm\n}) => (\n  <Panel {...panel}>\n    <ScheduledSlotForm {...scheduledSlotForm} />\n  </Panel>\n)\n\nconst AddScheduledSlotPanel = ({\n  isOpen, onAddScheduledSlot,\n  onDismiss\n}) => {\n\n  const addScheduledSlotPanel = {\n    scheduledSlotForm: {\n      onSubmit: onAddScheduledSlot\n    },\n    panel: {\n      isOpen,\n      isLightDismiss: true,\n      headerText: 'Add Scheduled Slot',\n      onDismiss\n    }\n  }\n\n  return <AddScheduledSlotPanelLayout {...addScheduledSlotPanel} />\n}\n\nAddScheduledSlotPanel.propTypes = {\n  isOpen: PropTypes.bool,\n  onAddScheduledSlot: PropTypes.func,\n  onDismiss: PropTypes.func,\n}\n\nexport default React.memo(AddScheduledSlotPanel);\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport AddScheduledSlotPanel from './AddScheduledSlotPanel'\nimport {IconButton} from '@fluentui/react'\n\nconst AddScheuduledSlotButtonLayout = ({\n  addScheduledSlotPanel,\n  defaultButton, iconButton\n}) => (\n  <>\n    <IconButton {...iconButton}/>\n    <AddScheduledSlotPanel {...addScheduledSlotPanel} />\n  </>\n);\n\nconst AddScheduledSlotButton = ({\n  onAddScheduledSlot\n}) => {\n  const [state, setState] = React.useState({\n    defaultButton: {},\n    iconButton: {},\n    addScheduledSlotPanel: {\n      isOpen: false\n    }\n  })\n\n  const updateAddScheduledSlotPanel = React.useCallback((update) => {\n      setState(currentState => ({\n        ...currentState,\n        addScheduledSlotPanel: {\n          ...currentState.addScheduledSlotPanel,\n          ...update\n        }\n      }))\n  },[])\n\n  const addScheduledSlotButton = {\n    defaultButton: {\n      className: 'ms-hiddenXxlDown',\n      text: 'Add Scheduled Slot',\n      iconProps: {\n        iconName: 'Add'\n      },\n      onClick: React.useCallback(() => {\n        updateAddScheduledSlotPanel({\n          isOpen: true\n        })\n      }, [updateAddScheduledSlotPanel])\n    },\n    iconButton: {\n      iconProps: {\n        iconName: 'Add'\n      },\n      onClick: () => addScheduledSlotButton.defaultButton.onClick()\n    },\n    addScheduledSlotPanel: {\n      ...state.addScheduledSlotPanel,\n      onAddScheduledSlot: React.useCallback((...args) => {\n        updateAddScheduledSlotPanel({\n          isOpen: false\n        })\n        onAddScheduledSlot(...args)\n      },[updateAddScheduledSlotPanel, onAddScheduledSlot]),\n      onDismiss: React.useCallback(() => {\n        updateAddScheduledSlotPanel({\n          isOpen: false\n        })\n      },[updateAddScheduledSlotPanel])\n    }\n  }\n\n  return <AddScheuduledSlotButtonLayout {...addScheduledSlotButton} />\n}\n\nAddScheduledSlotButton.propTypes = {\n  onAddScheduledSlot: PropTypes.func\n}\n\nexport default React.memo(AddScheduledSlotButton);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Stack, PrimaryButton\n} from '@fluentui/react';\nimport AddScheduledSlotButton from './AddScheduledSlotButton'\n\nconst PunchCardButtonsLayout = ({\n  primaryButton, addScheduledSlotButton\n}) => (\n\n  <Stack horizontal\n    tokens={{childrenGap: 10}}\n  >\n    <PrimaryButton\n      {...primaryButton}\n    />\n    <AddScheduledSlotButton {...addScheduledSlotButton} />\n  </Stack>\n\n);\n\nconst PunchCardButtons = ({\n  onClickPunchIn, onAddScheduledSlot,\n  punchInText,\n  showIcon, punchInDisabled\n}) => {\n  const punchCardButtons = {\n    primaryButton: {\n      text: punchInText,\n      iconProps: React.useMemo(\n        () => showIcon && ({\n          iconName: 'Leave'\n        }),\n        [showIcon]\n      ),\n      disabled: punchInDisabled,\n      onClick: onClickPunchIn\n    },\n    addScheduledSlotButton: {\n      onAddScheduledSlot: onAddScheduledSlot\n    }\n  };\n\n  return (\n    <PunchCardButtonsLayout {...punchCardButtons} />\n  )\n}\n\nPunchCardButtons.propTypes = {\n  showIcon: PropTypes.bool,\n  punchInText: PropTypes.string,\n  onAddScheduledSlot: PropTypes.func,\n  onClickPunchIn: PropTypes.func\n}\n\nexport default React.memo(PunchCardButtons)\n","import React from 'react';\nimport {Spinner as FarbicSpinner} from '@fluentui/react'\n\nconst SpinnerLayout = ({\n  show, spinner\n}) => show && <FarbicSpinner {...spinner} />\n\nconst Spinner = ({ show }) => {\n  const spinner = {\n    show\n  }\n  return <SpinnerLayout {...spinner} />\n}\n\nexport default React.memo(Spinner);\n","import React  from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  IconButton, SelectionMode,\n  mergeStyleSets\n} from '@fluentui/react'\nimport DetailsListWithText from '../../../../components/DetailsListWithText'\nimport DateTimeTextField from '../PunchInTimeCell'\nimport {FORMAT} from '../../shared'\nimport moment from 'moment'\nimport {verifyNewInTime, verifyNewOutTime} from '../PunchedSlots'\n\nconst InTextField = ({inTextField}) => <DateTimeTextField {...inTextField}/>\n\nconst OutTextField = ({outTextField}) => <DateTimeTextField {...outTextField}/>\n\nconst classNames = mergeStyleSets({\n  detailsList: {\n    '.ms-FocusZone.ms-DetailsHeader': {\n      paddingTop: 0\n    },\n    '.ms-DetailsList-headerWrapper': {\n      '.ms-DetailsHeader-cell': {\n        maxWidth: 'calc(50% - 15px) !important',\n        minWidth: 'calc(50% - 15px) !important',\n      },\n      '.ms-DetailsHeader-cell[data-item-key=\"deleteicon\"]': {\n        width: '30px !important',\n        maxWidth: '30px !important',\n        minWidth: '30px !important',\n      }\n    },\n    '.ms-List-cell': {\n      '.ms-DetailsRow': {\n        minWidth: '100% !important',\n        '.ms-DetailsRow-fields': {\n          width: '100%',\n          '.deleteIconColumn.ms-DetailsRow-cell': {\n            minWidth: '30px !important',\n            maxWidth: '30px !important',\n          },\n          '.ms-DetailsRow-cell': {\n            minWidth: 'calc(50% - 15px)',\n            maxWidth: 'calc(50% - 15px)',\n          }\n        }\n      }\n    }\n  }\n})\n\nconst ScheduledSlots = ({\n  items, onDeleteSlot, onChangeSlot\n}) => {\n  const [state, setState] = React.useState({\n    detailsList: {\n      items: []\n    }\n  })\n\n  const updateDetailsList = React.useCallback((update) => {\n    setState(currenState => ({\n      ...currenState,\n      detailsList: {\n        ...currenState.detailsList,\n        ...update\n      }\n    }))\n  },[])\n\n  const detailsListWithText = {\n    show: Boolean(items.length),\n    detailsList: {\n      ...state.detailsList,\n      className: classNames.detailsList,\n      selectionMode: SelectionMode.none,\n      columns: [{\n        key: 'inTime',\n        name: 'In Time',\n        onRender: InTextField\n      },{\n        key: 'outTime',\n        name: 'Out Time',\n        onRender: OutTextField\n      },{\n        key: \"deleteicon\",\n        className: 'deleteIconColumn',\n        onRender: ({deleteIconButton}) => <IconButton\n          iconProps={{iconName: 'Trash'}}\n          {...deleteIconButton}\n        />\n      }],\n    },\n    text: {\n      children: '🕚Scheduled Slots',\n      variant: 'mediumPlus'\n    }\n  }\n\n  /** Customize Items for DetailsList*/\n  React.useEffect(() => {\n    const updatedItems = items\n      .map(item => ({\n        id: item.id,\n        item,\n        inTextField: {\n          value: moment(item.inTime).format(FORMAT),\n          onError: (errorMessage) => updateDetailsList({\n            items: updatedItems.map(uItem => uItem.id === item.id ?\n              ({\n                  ...uItem,\n                  inTextField: {\n                    ...uItem.inTextField,\n                    errorMessage\n                  }\n              }) : uItem)\n          }),\n          onChange: (newInTime) => {\n            const {\n              isValid,\n              errorMessage = ''\n            } = verifyNewInTime({\n              newInTime,\n              slots: updatedItems,\n              item: updatedItems.find(uItem => uItem.id === item.id),\n              verifyIsGreaterThanNow: false\n            })\n            updateDetailsList({\n              items: updatedItems.map(uItem => uItem.id === item.id ?\n                ({\n                    ...uItem,\n                    inTextField: {\n                      ...uItem.inTextField,\n                      errorMessage\n                    }\n                }) : uItem)\n            })\n            if(isValid) {\n              onChangeSlot({\n                id: item.id,\n                inTime: moment(newInTime, FORMAT).valueOf(),\n              })\n            }\n          }\n        },\n        outTextField: {\n          value: moment(item.outTime).format(FORMAT),\n          onError: (errorMessage) => updateDetailsList({\n            items: updatedItems.map(uItem => uItem.id === item.id ?\n              ({\n                  ...uItem,\n                  outTextField: {\n                    ...uItem.outTextField,\n                    errorMessage\n                  }\n              }) : uItem)\n          }),\n          onChange: (newOutTime) => {\n            const {\n              isValid, errorMessage = ''\n            } = verifyNewOutTime({\n              newOutTime,\n              modifiedItems: updatedItems,\n              id: item.id,\n              verifyIsGreaterThanNow: false\n            })\n            updateDetailsList({\n              items: updatedItems.map(uItem => uItem.id === item.id ?\n                ({\n                    ...uItem,\n                    outTextField: {\n                      ...uItem.outTextField,\n                      errorMessage\n                    }\n                }) : uItem)\n            })\n            if(isValid) {\n              onChangeSlot({\n                id: item.id,\n                outTime: moment(newOutTime, FORMAT).valueOf()\n              })\n            }\n          },\n        },\n        deleteIconButton: {\n          onClick: () => onDeleteSlot(item)\n        }\n      }))\n\n    updateDetailsList({\n      items: updatedItems\n    })\n  },[updateDetailsList, items, onDeleteSlot, onChangeSlot])\n\n  return <DetailsListWithText {...detailsListWithText} />\n}\n\nScheduledSlots.propTypes = {\n  items: PropTypes.array,\n\n  onDeleteSlot: PropTypes.func,\n  onChangeSlot: PropTypes.func\n}\n\nexport default React.memo(ScheduledSlots)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Text, Stack} from '@fluentui/react'\n\nconst StatusEmoji = ({\n  showFinishFlag, showScheduledFinishDot,\n}) => {\n  if(showFinishFlag) return <>🏁</>\n  if(showScheduledFinishDot) return <>🔵</>\n  return null;\n}\n\nconst Progress = ({\n  show, punchedPercent, scheduledPercent, label,\n  statusEmoji\n}) => show && (\n  <Stack tokens={{childrenGap: 10}}>\n    <Stack horizontal horizontalAlign=\"space-between\">\n      <Text variant=\"mediumPlus\">\n        📊Progress\n      </Text>\n      <Text variant=\"mediumPlus\">\n        <StatusEmoji {...statusEmoji}/>\n      </Text>\n    </Stack>\n    <div className=\"progress rounded-0\" style={{height: 15}}>\n      <div\n        className=\"progress-bar\"\n        role=\"progressbar\"\n        style={{width: `${punchedPercent}%`}}\n        aria-valuenow={punchedPercent}\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      />\n      <div\n        className=\"progress-bar bg-warning progress-bar-striped\"\n        role=\"progressbar\"\n        style={{width: `${scheduledPercent}%`}}\n        aria-valuenow={scheduledPercent}\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      />\n    </div>\n  </Stack>\n);\n\nProgress.propTypes = {\n  punchedPercent: PropTypes.number,\n  scheduledPercent: PropTypes.number,\n  statusEmoji: PropTypes.object,\n  show: PropTypes.bool\n};\n\nexport default React.memo(Progress);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { MessageBar, MessageBarType, mergeStyleSets } from '@fluentui/react'\n\nconst classNames = mergeStyleSets({\n  messageBar: {\n    maxWidth: 185\n  }\n})\n\n// https://stackoverflow.com/a/38242552/4742733\nexport const convertMinutesToHours = (mins) => {\n  if(!mins || isNaN(Number(mins))) return '00:00'\n  const prefix = (() => {\n    if(mins < 0) return '- '\n    return ''\n  })();\n  mins = Math.abs(mins)\n  let h = Math.floor(mins / 60);\n  let m = mins % 60;\n  h = h < 10 ? '0' + h : h;\n  m = m < 10 ? '0' + m : m;\n  return `${prefix}${h}:${m}`;\n}\n\nconst InfoBarLayout = ({\n  messageBar, content,\n}) => (\n  <MessageBar {...messageBar}>\n    {content}\n  </MessageBar>\n)\n\nconst InfoBar = ({\n  minutesLeft,\n}) => {\n  const [state, setState] = React.useState({\n    hoursLeft: 0,\n    messageBar: {\n      className: classNames.messageBar,\n      messageBarType : MessageBarType.info\n    }\n  })\n  const infoBar = {\n    messageBar: {\n      ...state.messageBar\n    },\n    content: React.useMemo(\n      () => `${state.hoursLeft} hrs to go...`,\n      [state.hoursLeft]\n    ),\n  }\n\n  React.useEffect(() =>  {\n    const hoursLeft = convertMinutesToHours(minutesLeft)\n    setState(currentState => ({\n      ...currentState,\n      hoursLeft\n    }))\n  },[minutesLeft])\n\n  return <InfoBarLayout {...infoBar}/>\n}\n\nInfoBar.propTypes = {\n  minutesLeft: PropTypes.number\n}\n\nexport default React.memo(InfoBar)\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {v4 as uuid} from 'uuid'\nimport moment from 'moment'\nimport { Stack, Text} from '@fluentui/react'\nimport GoalForTheDayForm from './GoalForTheDayForm'\nimport PunchedSlots from './PunchedSlots'\nimport PunchCardButtons from './PunchCardButtons'\nimport Spinner from './Spinner'\nimport {messages} from '../shared'\nimport ScheduledSlots from './ScheduledSlots'\nimport Progress from './Progress'\nimport InfoBar from './InfoBar'\n\nconst PunchCardLayout = ({\n  show,\n  text,\n  goalForTheDayForm, punchedSlots,\n  punchCardButtons,\n  addScheduledSlotButton, spinner,\n  scheduledSlots,\n  infoBar, progress\n}) => (\n  show &&\n  <div className=\"ms-Grid\" dir=\"ltr\">\n    <div className=\"ms-Grid-row\">\n      <div className=\"ms-Grid-col ms-hiddenSm ms-md2 ms-lg3 ms-xl4 ms-xxxl5\"></div>\n      <div className=\"ms-Grid-col ms-sm12 ms-md8 ms-lg6 ms-xl4 ms-xxxl2 ms-depth-4\">\n        <Stack vertical tokens={{childrenGap: 10, padding: 5}}>\n          <Stack horizontal tokens={{childrenGap: 5}}>\n            <Text {...text} /> <Spinner {...spinner} />\n          </Stack>\n          <GoalForTheDayForm {...goalForTheDayForm} />\n          <InfoBar {...infoBar} />\n          <PunchedSlots {...punchedSlots} />\n          <PunchCardButtons {...punchCardButtons} />\n          <ScheduledSlots {...scheduledSlots}/>\n          <Progress {...progress} />\n        </Stack>\n      </div>\n      <div className=\"ms-Grid-col ms-hiddenSm ms-md2 ms-lg3 ms-xl4 ms-xxxl5\"></div>\n    </div>\n  </div>\n);\n\nconst {\n  START_YOUR_DAY,  PUNCH_IN\n} = messages;\n\nexport const getGoalInMinutes = (goalForTheDay = {}) => {\n  const {\n    hours = '00',\n    minutes = '00'\n  } = goalForTheDay;\n  const goaInMinutes = (Number(hours) * 60) + Number(minutes)\n  return goaInMinutes;\n}\n\nexport const getMinutesFromSlots = ({slots}) => {\n  if(!slots.length) return 0;\n  const minutes = slots\n    .reduce((loop, {inTime, outTime}) => {\n      if(!inTime || !outTime) {\n        return loop\n      }\n      const minutesDiff = moment(outTime).diff(inTime, 'minutes')\n      return minutesDiff + loop\n    }, 0)\n  return minutes;\n}\n\nexport const enablePunchInButton = ({items}) => {\n  if(!items.length) return true;\n  const lastIndex = items.length - 1;\n  const show = items[lastIndex].outTime;\n  return Boolean(show);\n}\n\nexport const getPercentComplete = ({items}) => {\n  return 0.2;\n}\n\nexport const getPunchInButtonText = (numberOfItems) => Boolean(numberOfItems) ? PUNCH_IN : START_YOUR_DAY;\n\n/**\n  The Punch Card Component will\n  display the punch-card details\n  such as `goal-for-the-day`,\n  `punchedSlots`, etc.\n\n  It also gives you an API for updating\n  the goal for the punch-card with `onChangeGoal`, adding a punched-slot with\n  `onAddPunchedSlot`, editing a punched-slot with\n  `onUpdatePunchSlot`, etc.\n*/\nconst PunchCard = ({\n  id,\n  punchedSlots, title,\n  goalForTheDay,\n  scheduledSlots,\n\n  onUpdatePunchSlot,\n  onAddPunchedSlot,\n  onAddScheduledSlot,\n\n  onDeleteScheduledSlot,\n  onChangeScheduledSlot,\n\n  onChangeGoal,\n}) => {\n  const [state, setState] = React.useState({\n    goaInMinutes: 0,\n    minutesLeft: 0,\n    punchedMinutes: 0,\n    scheduledMinutes: 0,\n    punchedPercent: 0,\n    scheduledPercent: 0,\n    totalPercent: 0,\n    spinner: {\n      show: false\n    },\n    punchedProgress: {\n      label: <Text variant=\"mediumPlus\">⏳Punched</Text>\n    },\n    scheduledProgress: {\n      label: <Text variant=\"mediumPlus\">🕚 Scheduled </Text>\n    },\n  });\n\n  const updateSpinner = React.useCallback((update) => {\n    setState(currentState => ({\n      ...currentState,\n      spinner: {\n          ...currentState.spinner,\n          ...update\n      }\n    }))\n  },[])\n\n  const punchCard = {\n    show: React.useMemo(() => Boolean(id), [id]),\n    spinner: {\n      ...state.spinner\n    },\n    text: {\n      children: title,\n      variant: 'large'\n    },\n    goalForTheDayForm: {\n      ...goalForTheDay,\n      onChangeGoal: React.useCallback((update) => {\n        onChangeGoal({\n          id,\n          goalForTheDay: {\n            ...goalForTheDay,\n            ...update\n          }\n        })\n      }, [onChangeGoal, goalForTheDay, id])\n    },\n    punchedSlots: {\n      onUpdatePunchSlot: React.useCallback(async(updatedItem) => {\n        updateSpinner({show: true})\n        try {\n          const updatedPunchSlotItems = punchedSlots\n            .map(item => updatedItem.id === item.id ? ({\n              ...item,\n              ...updatedItem\n            }) : item)\n          await onUpdatePunchSlot({\n            id,\n            punchedSlots: updatedPunchSlotItems\n          });\n        } catch (e) {\n          console.error('punch-slot did not update', e)\n        } finally {\n          updateSpinner({show: false})\n        }\n      },[punchedSlots, onUpdatePunchSlot, updateSpinner, id]),\n      items: punchedSlots\n    },\n    punchCardButtons: {\n      punchInText: React.useMemo(\n        () => getPunchInButtonText(punchedSlots.length),\n      [punchedSlots.length]),\n      onClickPunchIn: React.useCallback(() => {\n        const newPunchedSlot = {\n          id: uuid(),\n          inTime: Date.now(),\n          outTime: null\n        };\n        onAddPunchedSlot({\n          id,\n          punchedSlots: [\n            ...punchedSlots,\n            newPunchedSlot\n          ]\n        })\n      },[onAddPunchedSlot, punchedSlots, id]),\n      onAddScheduledSlot: React.useCallback((scheduledSlot) => {\n        onAddScheduledSlot({\n          id,\n          scheduledSlots: [\n            ...scheduledSlots,\n            scheduledSlot\n          ]\n        })\n      },[\n        onAddScheduledSlot,\n        scheduledSlots, id\n      ]),\n      punchInDisabled: React.useMemo(\n        () => !enablePunchInButton({\n          items: punchedSlots\n        }),\n          [punchedSlots]\n        ),\n      showIcon: React.useMemo(\n        () => Boolean(punchedSlots.length),\n        [punchedSlots.length]\n      )\n    },\n    scheduledSlots: {\n      items: scheduledSlots,\n      onDeleteSlot: React.useCallback((deletedSlot) => {\n        const updatedSlots = scheduledSlots\n          .filter(slot => slot.id !== deletedSlot.id);\n        onDeleteScheduledSlot({\n          id,\n          scheduledSlots: updatedSlots\n        });\n      },[onDeleteScheduledSlot, scheduledSlots, id]),\n      onChangeSlot: React.useCallback((updatedSlot) => {\n        const updatedSlots = scheduledSlots\n          .map(slot => slot.id === updatedSlot.id ? ({\n            ...slot,\n            ...updatedSlot\n          }): slot)\n        onChangeScheduledSlot({\n          id,\n          scheduledSlots: updatedSlots\n        })\n      },[onChangeScheduledSlot, scheduledSlots, id])\n    },\n    progress: {\n      show: React.useMemo(\n        () => Boolean(punchedSlots.length),\n        [punchedSlots.length]\n      ),\n      punchedPercent: React.useMemo(\n        () => state.punchedPercent,\n        [state.punchedPercent]\n      ),\n      scheduledPercent: React.useMemo(\n        () => state.scheduledPercent,\n        [state.scheduledPercent]\n      ),\n      statusEmoji: React.useMemo(() => ({\n        showFinishFlag: state.punchedPercent > 100,\n        showScheduledFinishDot: state.totalPercent > 100\n      }),[state.punchedPercent, state.totalPercent])\n    },\n    infoBar: {\n      minutesLeft: React.useMemo(\n        () => state.minutesLeft,\n        [state.minutesLeft]\n      )\n    }\n  }\n\n  /**Effect when punchedSlots or goalForTheDay is updated*/\n  React.useEffect(() => {\n    const goalInMinutes = getGoalInMinutes(goalForTheDay);\n    const punchedMinutes = getMinutesFromSlots({\n      slots: punchedSlots\n    });\n    const scheduledMinutes = getMinutesFromSlots({\n      slots: scheduledSlots\n    })\n    const punchedPercent = (() => {\n      if(!goalInMinutes) return 0\n      return (punchedMinutes/goalInMinutes) * 100\n    })()\n    const scheduledPercent = (() => {\n      if(!goalInMinutes) return 0\n      return (scheduledMinutes/goalInMinutes) * 100\n    })()\n    const totalPercent = punchedPercent + scheduledPercent;\n    const minutesLeft = goalInMinutes ? goalInMinutes - punchedMinutes : 0;\n    setState(currentState => ({\n      ...currentState,\n      goalInMinutes,\n      punchedMinutes,\n      scheduledMinutes,\n      punchedPercent, scheduledPercent, totalPercent,\n      minutesLeft\n    }))\n  },[punchedSlots, goalForTheDay, scheduledSlots])\n\n  return <PunchCardLayout {...punchCard} />\n}\n\nPunchCard.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n\n  goalForTheDay: PropTypes.shape({\n    hours: PropTypes.string.isRequired,\n    minutes: PropTypes.string.isRequired\n  }),\n\n  punchedSlots: PropTypes.array,\n  scheduledSlots: PropTypes.array,\n\n  onChangeGoal: PropTypes.func,\n  onUpdatePunchSlot: PropTypes.func,\n  onAddPunchedSlot: PropTypes.func,\n  onAddScheduledSlot: PropTypes.func,\n  onDeleteScheduledSlot: PropTypes.func,\n  onChangeScheduledSlot: PropTypes.func,\n}\n\nPunchCard.defaultProps = {\n  punchedSlots: [],\n  scheduledSlots: []\n}\n\nexport default React.memo(PunchCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack, TextField, PrimaryButton,\n  IconButton\n} from '@fluentui/react'\n\nconst NewPunchCardFormLayout = ({\n  textField0, iconButton0, primaryButton0,\n  form\n}) => (\n  <form {...form}>\n    <Stack horizontal tokens={{childrenGap: 10}}>\n      <TextField\n        {...textField0}\n      />\n      <IconButton\n        {...iconButton0}\n      />\n      <PrimaryButton\n        {...primaryButton0}\n      />\n    </Stack>\n  </form>\n)\n\nconst NewPunchCardForm = ({\n  onSubmit\n}) => {\n  const [state, setState] = React.useState({\n    textField0: {\n      value: '',\n      placeholder: \"Punch Card Name...\",\n    },\n    iconButton0: {\n      type: 'submit',\n      className: 'ms-hiddenXlUp',\n      title: 'Add Punch Card',\n      iconProps:{\n        iconName: 'Add'\n      },\n    },\n    primaryButton0: {\n      className:\"ms-hiddenLgDown\",\n      type:\"submit\",\n      iconProps:{\n        iconName: 'Add'\n      },\n      text: 'Add Punch Card',\n      title: 'Add Punch Card',\n    }\n  });\n\n  const updateTextField0 = React.useCallback((evt, value) => {\n    setState(currentState => ({\n      ...currentState,\n      textField0: {\n        ...currentState.textField0,\n        value\n      }\n    }))\n  },[])\n\n  const punchCardForm = {\n    textField0: {\n      ...state.textField0,\n      onChange: updateTextField0,\n    },\n    iconButton0: {\n      ...state.iconButton0,\n      disabled: !state.textField0.value.trim(),\n    },\n    primaryButton0: {\n      ...state.primaryButton0,\n      disabled: !state.textField0.value.trim()\n    },\n    form: {\n      onSubmit: React.useCallback((evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        onSubmit(state.textField0.value);\n        updateTextField0(null, '');\n      },[state.textField0.value, onSubmit, updateTextField0])\n    }\n  };\n\n  return (\n    <NewPunchCardFormLayout {...punchCardForm} />\n  )\n}\n\nNewPunchCardForm.propTypes = {\n  onSubmit: PropTypes.func\n};\n\nexport default React.memo(NewPunchCardForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  IconButton, Text\n} from '@fluentui/react'\n\nconst PunchCardListItemLayout = ({\n  iconButton0, iconButton1,\n  text\n}) => (\n  <Text variant=\"large\" as=\"em\">\n    <IconButton\n      {...iconButton0}\n    />\n    {text}\n    <IconButton {...iconButton1}/>\n  </Text>\n)\n\nconst PunchCardListItemWithoutMemo= ({\n  onEdit, onDelete, title\n}) => {\n  const punchCardListItem = {\n    iconButton0: {\n      primary: true,\n      iconProps: {\n        iconName: 'Edit'\n      },\n      onClick: onEdit\n    },\n    iconButton1: {\n      iconProps: {\n        iconName: 'Delete'\n      },\n      onClick: onDelete\n    },\n    text: title\n  }\n\n  return <PunchCardListItemLayout\n    {...punchCardListItem}\n  />\n}\n\nPunchCardListItemWithoutMemo.propTypes = {\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  title: PropTypes.string\n}\n\nexport const PunchCardListItem = React.memo(PunchCardListItemWithoutMemo)\n\nconst PunchCards = ({punchCards}) => Array.isArray(punchCards) && punchCards\n  .map((punchCard) => {\n    return <PunchCardListItem key={punchCard.id} {...punchCard} />\n  })\n\nexport default React.memo(PunchCards);\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {Panel, Stack} from '@fluentui/react'\nimport PunchCardsList  from './PunchCards'\n\nconst PunchCardsPanelLayout = ({\n  show, panel, punchCardsList\n}) => show && (\n  <Panel {...panel}>\n    <Stack vertical>\n      <PunchCardsList {...punchCardsList} />\n    </Stack>\n  </Panel>\n);\n\nPunchCardsPanelLayout.defaultProps = {\n  show: false\n}\n\nconst PunchCardsPanel = ({\n  items, isOpen,\n  onDismiss, onDeletePunchCard,\n  onSelectPunchCard,\n}) => {\n  const [state, setState] = React.useState({\n    panel: {\n      isOpen: true\n    },\n    punchCardsList: {\n      punchCards: []\n    }\n  })\n\n  const updatePunchCardsList = React.useCallback((update) => {\n    setState(currentState => ({\n      ...currentState,\n      punchCardsList: {\n        ...currentState.punchCardsList,\n        ...update\n      }\n    }))\n  }, [])\n\n  const punchCardsPanel = {\n    show: isOpen,\n    panel: {\n      isOpen,\n      onDismiss,\n      headerText:'Punch Cards',\n    },\n    punchCardsList: {\n      ...state.punchCardsList\n    }\n  }\n\n  React.useEffect(() => {\n    const updatedItems = items.map((item) => ({\n      ...item,\n      onEdit: () => onSelectPunchCard(item.id),\n      onDelete: () => onDeletePunchCard(item.id)\n    }))\n    updatePunchCardsList({\n      punchCards: updatedItems\n    })\n  }, [items, updatePunchCardsList, onSelectPunchCard, onDeletePunchCard])\n\n  return <PunchCardsPanelLayout\n    {...punchCardsPanel}\n  />\n}\n\nPunchCardsPanel.propTypes = {\n  onDeletePunchCard: PropTypes.func,\n  onSelectPunchCard: PropTypes.func,\n  onDismiss: PropTypes.func,\n  isOpen: PropTypes.bool,\n  items: PropTypes.array,\n}\n\nPunchCardsPanel.defaultProps =  {\n  items: [],\n}\n\nexport default React.memo(PunchCardsPanel)\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {IconButton, DefaultButton} from '@fluentui/react'\nimport PunchCardsPanel from './PunchCardsPanel'\n\nconst ShowPunchCardsButtonLayout = ({\n  iconButton0, defaultButotn0, punchCardsPanel\n}) => (\n  <>\n    <IconButton\n      {...iconButton0}\n    />\n    <DefaultButton\n      {...defaultButotn0}\n    />\n    <PunchCardsPanel {...punchCardsPanel}/>\n  </>\n);\nconst ShowPunchCardsButton = ({\n  onClick, disabled,\n  items, isOpenPanel,\n  onDismiss, onDeletePunchCard,\n  onSelectPunchCard,\n}) => {\n\n  const showPunchCardsButton = {\n    iconButton0: {\n      type: 'submit',\n      disabled,\n      className: 'ms-hiddenXlUp',\n      title: 'Show Punch Cards',\n      iconProps:{\n        iconName: 'RedEye'\n      },\n      onClick\n    },\n    defaultButotn0: {\n      className:\"ms-hiddenLgDown\",\n      disabled,\n      type:\"submit\",\n      iconProps:{\n        iconName: 'RedEye'\n      },\n      text: 'Show Punch Cards',\n      title: 'Show Punch Cards',\n      onClick\n    },\n    punchCardsPanel: {\n      items,\n      isOpen: isOpenPanel,\n      onDismiss, onDeletePunchCard,\n      onSelectPunchCard,\n    }\n  }\n\n  return <ShowPunchCardsButtonLayout {...showPunchCardsButton} />\n}\n\nShowPunchCardsButton.propTypes = {\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  isOpenPanel: PropTypes.bool,\n  items: PropTypes.array,\n  onDeletePunchCard: PropTypes.func,\n  onSelectPunchCard: PropTypes.func,\n}\n\nShowPunchCardsButton.defaultProps = {\n  items: []\n}\n\nexport default React.memo(ShowPunchCardsButton);\n","import React from 'react';\nimport {Stack} from '@fluentui/react'\nimport PropTypes from 'prop-types'\nimport PunchCard from './PunchCard'\nimport NewPunchCardForm from './NewPunchCardForm'\nimport PunchCardsPanel from './ShowPunchCardsButton/PunchCardsPanel'\nimport ShowPunchCardsButton from './ShowPunchCardsButton'\n\n// TODO - PROVIDE option to save scheduled slots\n// TODO - SHOW a flag above progress-bar when the goal is accomplished\n\nconst PunchCardAppLayout = ({\n  selectedPunchCard, newPunchCardForm,\n  punchCardsPanel, showPunchCardsButton\n}) => (\n  <Stack tokens={{childrenGap: 10, padding: 5}}>\n    <Stack tokens={{childrenGap: 10}}>\n      <PunchCardsPanel {...punchCardsPanel} />\n      <Stack.Item>\n        <Stack horizontal tokens={{childrenGap: 10}}>\n          <NewPunchCardForm {...newPunchCardForm}/>\n          <ShowPunchCardsButton {...showPunchCardsButton}/>\n        </Stack>\n      </Stack.Item>\n      <PunchCard {...selectedPunchCard}/>\n    </Stack>\n  </Stack>\n);\n\nconst PunchCardApp =  ({\n  onAddPunchCard,\n  punchCards,\n  selectedPunchCard,\n\n  isOpenPunchCardsPanel, onDismissPunchCardPanel,\n  onDeletePunchCard, onSelectPunchCard,\n  onClickShowPunchCardsButton,\n\n  onEditPunchCard\n}) => {\n\n  const punchCardApp = {\n    selectedPunchCard: {\n      ...selectedPunchCard,\n      onChangeGoal: onEditPunchCard,\n      onUpdatePunchSlot: onEditPunchCard,\n      onAddPunchedSlot: onEditPunchCard,\n      onAddScheduledSlot: onEditPunchCard,\n      onDeleteScheduledSlot: onEditPunchCard,\n      onChangeScheduledSlot: onEditPunchCard\n    },\n    newPunchCardForm: {\n      onSubmit: React.useCallback(async(punchCardName) => {\n        await onAddPunchCard(punchCardName)\n      },[onAddPunchCard])\n    },\n    showPunchCardsButton: {\n      isOpenPanel: isOpenPunchCardsPanel,\n      items: punchCards,\n      onDeletePunchCard, onSelectPunchCard,\n      onDismiss: onDismissPunchCardPanel,\n      disabled: React.useMemo(() => !punchCards.length, [punchCards.length]),\n      onClick: onClickShowPunchCardsButton\n    }\n  }\n\n  return <PunchCardAppLayout {...punchCardApp} />\n}\n\nPunchCardApp.propTypes = {\n  selectedPunchCard: PropTypes.object,\n  onAddPunchCard: PropTypes.func,\n  onDismissPunchCardPanel: PropTypes.func,\n  onClickShowPunchCardsButton: PropTypes.func,\n  punchCards: PropTypes.array,\n  isOpenPunchCardsPanel: PropTypes.bool,\n  onDeletePunchCard: PropTypes.func,\n  onSelectPunchCard: PropTypes.func,\n  onEditPunchCard: PropTypes.func\n}\n\nPunchCardApp.defaultProps = {\n  punchCards: [],\n  isOpenPunchCardsPanel: false\n}\n\nexport default React.memo(PunchCardApp);\n","import Dexie from 'dexie'\n\nconst db = new Dexie('MyDb');\n\ndb.version(1)\n  .stores({\n    punchCards: \"++id\"\n  })\n\ndb.open()\n\nexport default db;\n","import React from 'react'\nimport PunchCardApp from './apps/PunchCardApp'\nimport db from './db'\nimport {v4 as uuid} from 'uuid'\nimport './bootstrap/scss/bootstrap.scss'\n\nconst App = () => {\n  const [state, setState] = React.useState({\n    punchCards: [],\n    selectedPunchCard: null,\n    isOpenPunchCardsPanel: false\n  })\n\n  const  punchCardApp = {\n    ...state,\n    onAddPunchCard: React.useCallback(async(title) => {\n      const newPunchCard = {\n        id: uuid(),\n        title,\n        punchedSlots: [],\n        scheduledSlots: [],\n        goalForTheDay: {\n          hours: '09',\n          minutes: '00'\n        }\n      };\n      await db.punchCards.add(newPunchCard)\n      setState(currentState => ({\n        punchCards: [\n          newPunchCard,\n          ...currentState.punchCards,\n        ],\n        isOpenPunchCardsPanel: true\n      }))\n    },[]),\n    onDismissPunchCardPanel: React.useCallback(() => {\n      setState(currentState => ({\n        ...currentState,\n        isOpenPunchCardsPanel: false\n      }))\n    },[]),\n    onOpenPunchCardPanel: React.useCallback(() => {\n      setState(currentState => ({\n        ...currentState,\n        isOpenPunchCardsPanel: true\n      }))\n    },[]),\n    onDeletePunchCard: React.useCallback(async (id) => {\n      await db.punchCards.delete(id);\n      setState(currentState => {\n        const punchCards = currentState.punchCards\n          .filter(punchCard => id !== punchCard.id)\n        const isOpenPunchCardsPanel = Boolean(punchCards.length);\n        const selectedPunchCard = (() => {\n          if(!currentState.selectedPunchCard) return null\n          const isSelectedPunchCard = id === currentState.selectedPunchCard.id;\n          if(isSelectedPunchCard) return null\n          return currentState.selectedPunchCard\n        })()\n        return {\n          ...currentState,\n          isOpenPunchCardsPanel,\n          punchCards,\n          selectedPunchCard\n        }\n      })\n    },[]),\n    onSelectPunchCard: React.useCallback(async(id) => {\n      const selectedPunchCard = await db.punchCards.get(id)\n      setState(currentState => ({\n        ...currentState,\n        selectedPunchCard,\n        isOpenPunchCardsPanel: false\n      }))\n    },[]),\n    onEditPunchCard: React.useCallback(async({id, ...update}) => {\n      await db.punchCards.update(id, update);\n      setState(currentState => {\n        const updatedPunchCards = currentState.punchCards\n          .map(punchCard => punchCard.id === id ? ({\n            ...punchCard,\n            ...update\n          }) : punchCard);\n        console.log({update})\n        return {\n          ...currentState,\n          punchCards: updatedPunchCards,\n          selectedPunchCard: {\n            ...currentState.selectedPunchCard,\n            ...update\n          }\n        }\n      })\n    },[]),\n    onClickShowPunchCardsButton: React.useCallback(() => {\n      setState(currentState => ({\n        ...currentState,\n        isOpenPunchCardsPanel: true\n      }))\n    },[]),\n  }\n\n  React.useEffect(() => {\n    db.punchCards.toArray(punchCards => {\n      if(punchCards.length) {\n        setState(currentState => ({\n          punchCards,\n          isOpenPunchCardsPanel: true\n        }))\n      }\n    })\n  },[])\n\n  return <PunchCardApp {...punchCardApp}  />\n}\n\nexport default React.memo(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fluentui/react/dist/css/fabric.min.css'\nimport { initializeIcons } from '@uifabric/icons';\n\ninitializeIcons();\n\n// TODO - have a centralized place to import modules from\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}