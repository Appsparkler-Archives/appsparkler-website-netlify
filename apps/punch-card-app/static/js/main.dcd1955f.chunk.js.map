{"version":3,"sources":["apps/PunchCardApp/PunchCard/PunchedProgress/index.js","components/ShowHide.js","components/CustomLabel/index.js","components/CustomLabel/variantA.js","apps/PunchCardApp/PunchCard/GoalForTheDayForm/index.js","components/DetailsListWithText/index.js","apps/PunchCardApp/shared.js","apps/PunchCardApp/PunchCard/PunchInTimeCell/index.js","apps/PunchCardApp/PunchCard/PunchOutCell/index.js","apps/PunchCardApp/PunchCard/PunchedSlots/index.js","apps/PunchCardApp/PunchCard/PunchCardButtons/index.js","apps/PunchCardApp/PunchCard/AddScheduledSlotPanel/ScheduledSlotForm/index.js","apps/PunchCardApp/PunchCard/AddScheduledSlotPanel/index.js","apps/PunchCardApp/PunchCard/Spinner/index.js","apps/PunchCardApp/PunchCard/ScheduledSlots/index.js","apps/PunchCardApp/PunchCard/InfoBar/index.js","apps/PunchCardApp/PunchCard/index.js","apps/PunchCardApp/NewPunchCardForm/index.js","apps/PunchCardApp/ShowPunchCardsButton/PunchCardsPanel/PunchCards/index.js","apps/PunchCardApp/ShowPunchCardsButton/PunchCardsPanel/index.js","apps/PunchCardApp/ShowPunchCardsButton/index.js","apps/PunchCardApp/index.js","db.js","App.js","reportWebVitals.js","index.js"],"names":["PunchedProgressLayout","show","progressIndicator","ProgressIndicator","PunchedProgress","progress","label","React","useState","barHeight","state","punchedProgress","percentComplete","defaultProps","memo","ShowHide","children","propTypes","PropTypes","bool","any","CustomLabel","showCallout","iconButton","labelWrapperStack","contentWrapperStack","calloutContent","callout","Stack","Label","IconButton","Callout","CustomLabelVariantA","customLabelVariantA","args","content","iconButtonId","useId","useBoolean","toggleCallout","toggle","horizontal","verticalAlign","tokens","childrenGap","maxWidth","target","onDismiss","id","styles","root","marginBottom","title","iconProps","iconName","onClick","useCallback","padding","Text","variant","useCustomLabelVariantA","GoalForTheDayFormLayout","text0","form","maskedTextField0","maskedTextField1","MaskedTextField","classNames","mergeStyleSets","textField","onRenderLabel","props","onClickSelection","evt","elem","select","isInRange","min","max","value","numberVal","Number","isNaN","isLessThanMin","isGreaterThanMax","GoalForTheDayForm","onChangeGoal","hours","minutes","className","mask","errorMessage","setState","updateErrorMessageOnMinutes","useMemo","_debounce","currentState","_set","debounceUpdateTextField0","update","updateTextField0","goalForTheDayForm","onSubmit","preventDefault","stopPropagation","onChange","cancel","useEffect","is24","disabled","DetailsListWithText","detailsList","text","DetailsList","items","Name","FORMAT","selectTimeInDate","startPos","endPos","selectionStart","selectionEnd","selectInputText","messages","PunchInTimeCellLayout","tooltipHost0","TooltipHost","PunchInTimeCell","onError","punchInTimeCellLayout","Boolean","String","match","moment","isValid","PunchOutTimeCellLayout","showTextField","tooltipHost","primaryButton0","PrimaryButton","primaryButton0Icon","transform","PunchOutTimeCell","punchOutTimeCell","paddingTop","minWidth","display","verifyNewOutTime","newOutTime","modifiedItems","newOutTimeMoment","modifiedItem","_findIndex","item","inTime","nextItemIndex","mItem","nextItem","verifyNewInTime","slots","newInTime","newInTimeMoment","itemIndex","fItem","prevOutTime","outTime","valueOf","PunchedSlots","onUpdatePunchSlot","selectionMode","SelectionMode","none","columns","uuid","key","name","fieldName","isResizable","onRender","punchInTimeCell","detailsListWithText","length","updateDetailsList","updateDetailsListItem","updatedItems","map","_merge","idx","format","find","uItem","PunchCardButtonsLayout","primaryButton","defaultButton","DefaultButton","PunchCardButtons","onClickPunchIn","onClickAddScheduledSlot","punchInText","showIcon","punchInDisabled","punchCardButtons","ScheduledSlotFormLayout","Item","onDateTimeFieldClick","getInitialValue","add","startOf","ScheduledSlotForm","required","type","updateMaskedTextField0Value","updateMaskedTextField1Value","resetFields","scheduledSlotForm","startEndTime","inTimeMoment","outTimeMoment","isoutTimeGreaterThaninTime","momentsAreValid","getIsOk2Submit","AddScheduledSlotPanelLayout","panel","Panel","AddScheduledSlotPanel","isOpen","onAddScheduledSlot","updatePanel","addScheduledSlotPanel","isLightDismiss","headerText","SpinnerLayout","spinner","Spinner","InTextField","inTextField","OutTextField","outTextField","width","ScheduledSlots","onDeleteSlot","onChangeSlot","currenState","deleteIconButton","messageBar","InfoBarLayout","MessageBar","InfoBar","minutesLeft","hoursLeft","messageBarType","MessageBarType","info","infoBar","mins","prefix","Math","abs","h","floor","m","convertMinutesToHours","PunchCardLayout","punchedSlots","scheduledSlots","scheduledProgress","vertical","dir","START_YOUR_DAY","PUNCH_IN","getMinutesFromSlots","reduce","loop","diff","PunchCard","goalForTheDay","onAddPunchedSlot","onDeleteScheduledSlot","onChangeScheduledSlot","goaInMinutes","punchedMinutes","scheduledMinutes","punchedPercent","scheduledPercent","updateAddScheduledSlotPanel","updateSpinner","punchCard","updatedItem","a","updatedPunchSlotItems","console","error","numberOfItems","newPunchedSlot","Date","now","enablePunchInButton","scheduledSlot","deletedSlot","updatedSlots","filter","slot","updatedSlot","goalInMinutes","getGoalInMinutes","NewPunchCardFormLayout","textField0","iconButton0","TextField","NewPunchCardForm","placeholder","punchCardForm","trim","PunchCardListItemLayout","iconButton1","as","PunchCardListItemWithoutMemo","punchCardListItem","primary","onEdit","onDelete","PunchCardListItem","PunchCards","punchCards","Array","isArray","PunchCardsPanelLayout","punchCardsList","PunchCardsPanel","onDeletePunchCard","onSelectPunchCard","updatePunchCardsList","punchCardsPanel","ShowPunchCardsButtonLayout","defaultButotn0","ShowPunchCardsButton","showPunchCardsButton","isOpenPanel","PunchCardAppLayout","selectedPunchCard","newPunchCardForm","PunchCardApp","onAddPunchCard","isOpenPunchCardsPanel","onDismissPunchCardPanel","onClickShowPunchCardsButton","onEditPunchCard","punchCardApp","punchCardName","db","Dexie","version","stores","open","App","newPunchCard","onOpenPunchCardPanel","delete","get","updatedPunchCards","log","toArray","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeIcons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcd1955f.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {ProgressIndicator} from '@fluentui/react'\n\nconst PunchedProgressLayout = ({\n  show, progressIndicator\n}) => show && <ProgressIndicator {...progressIndicator}/>\n\nconst PunchedProgress = ({\n  show, progress, label\n}) => {\n  const [state] = React.useState({\n    progressIndicator: {\n      label ,\n      barHeight: 12,\n    }\n  })\n  const punchedProgress = {\n    show,\n    progressIndicator: {\n      ...state.progressIndicator,\n      percentComplete: progress,\n    }\n  }\n  return (\n    <PunchedProgressLayout {...punchedProgress} />\n  )\n}\n\nPunchedProgressLayout.propTypes = {\n  show: PropTypes.bool,\n  progress: PropTypes.number\n}\n\nPunchedProgressLayout.defaultProps = {\n  show: false,\n  progress: 0\n}\n\nexport default React.memo(PunchedProgress)\n","import  React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ShowHide = ({show, children})  => show && children;\n\nShowHide.propTypes = {\n  show: PropTypes.bool,\n  children:  PropTypes.any\n}\n\nShowHide.defaultProps  = {\n  show: true,\n  children: null\n}\n\nexport default React.memo(ShowHide)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Stack, IconButton, Callout,\n  Label\n} from '@fluentui/react'\nimport ShowHide from '../ShowHide'\n\nexport const CustomLabel  = ({\n  showCallout, label,\n  iconButton, labelWrapperStack,\n  contentWrapperStack,\n  calloutContent,\n  callout\n}) => {\n  return (\n    <>\n      <Stack\n        {...labelWrapperStack}\n      >\n        <Label>\n          {label}\n        </Label>\n        <IconButton\n          {...iconButton}\n        />\n      </Stack>\n      <ShowHide show={showCallout}>\n        <Callout\n          {...callout}\n        >\n          <Stack {...contentWrapperStack}>\n            <span>\n              {calloutContent}\n            </span>\n          </Stack>\n        </Callout>\n      </ShowHide>\n    </>\n  )\n}\n\nCustomLabel.propTypes = {\n  labelWrapperStack: PropTypes.object,\n  label: PropTypes.string,\n  showCallout: PropTypes.bool,\n  iconButton: PropTypes.object,\n}\n\nexport default React.memo(CustomLabel);\n","import React from 'react'\nimport {Text} from '@fluentui/react'\nimport {useId, useBoolean} from '@uifabric/react-hooks'\nimport CustomLabel from './'\nimport PropTypes from 'prop-types'\n\nconst useCustomLabelVariantA = (args) => {\n  const  {\n    label = '',\n    content = ''\n  } = args\n  const iconButtonId = useId()\n  const [showCallout, {toggle: toggleCallout}] = useBoolean(false);\n  return {\n    labelWrapperStack: {\n      horizontal:  true,\n      verticalAlign: 'center',\n      tokens: {\n        childrenGap: 4,\n        maxWidth: 300,\n      }\n    },\n    label,\n    callout: {\n      target: `#${iconButtonId}`,\n      onDismiss: toggleCallout\n    },\n    iconButton: {\n      id: iconButtonId,\n      styles: {\n        root: {\n          marginBottom: -3,\n        }\n      },\n      title: 'Info',\n      iconProps: {\n        iconName: 'Info'\n      },\n      onClick: React.useCallback(() => {\n        toggleCallout()\n      },[toggleCallout])\n    },\n    showCallout,\n    contentWrapperStack: {\n      styles: { root: {\n        padding: 10,\n        maxWidth: 200\n      } },\n    },\n    calloutContent: (\n      <Text variant=\"small\">\n        {content}\n    </Text>)\n  }\n}\n\nexport const CustomLabelVariantA = ({\n  label, content\n}) => {\n  const customLabelVariantA = useCustomLabelVariantA({\n    label, content\n  })\n  return (\n    <CustomLabel {...customLabelVariantA}/>\n  )\n};\n\nCustomLabelVariantA.propTypes = {\n  label: PropTypes.string,\n  content: PropTypes.string\n}\n\nexport default React.memo(CustomLabelVariantA)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  MaskedTextField, Stack,\n  Text, mergeStyleSets\n} from '@fluentui/react'\nimport _set from 'lodash/set'\nimport _debounce from 'lodash/debounce'\nimport CustomLabel from '../../../../components/CustomLabel/variantA'\n\nconst GoalForTheDayFormLayout = ({\n  text0, form,\n  maskedTextField0, maskedTextField1\n}) => (\n  <form {...form}>\n      <Text {...text0}/>\n      <Stack horizontal tokens={{childrenGap: 5}}>\n        <MaskedTextField {...maskedTextField0} />\n        <MaskedTextField {...maskedTextField1} />\n      </Stack>\n  </form>\n)\n\nconst classNames = mergeStyleSets({\n  textField: {\n    maxWidth: 90\n  }\n})\n\nconst onRenderLabel = (props) => <CustomLabel {...props}/>\n\nconst onClickSelection = (evt) => {\n  const elem = evt.target;\n  elem.select();\n  elem.select(0, 99999);\n}\n\nexport const isInRange = ({\n  min, max, value\n}) => {\n  const numberVal = Number(value, 10);\n  const isNumber = !isNaN(numberVal);\n  if(isNumber) {\n    const isLessThanMin = numberVal < Number(min);\n    const isGreaterThanMax = numberVal > Number(max);\n    return !isLessThanMin && !isGreaterThanMax;\n  } else {\n    return false;\n  }\n}\n\nexport const getGoalInMinutes = ({hours, minutes}) => {\n  const isHoursNaN  = isNaN(Number(hours));\n  const isMinutesNaN = isNaN(Number(minutes));\n  const isAnyNaN = isHoursNaN || isMinutesNaN\n  if(isAnyNaN) return 0;\n  const goalInMinutes =  (Number(hours) * 60) + (Number(minutes));\n  return goalInMinutes;\n}\n\nconst GoalForTheDayForm = ({\n  onChangeGoal, hours, minutes\n}) => {\n  const [state, setState] = React.useState({\n    text0: {\n      children: '🎯Goal For The Day',\n      variant: 'mediumPlus',\n    },\n    maskedTextField0: {\n      className: classNames.textField,\n      content: 'A value between 00 and 24.',\n      mask: '99',\n      label: 'Hours',\n      onClick: onClickSelection,\n      onRenderLabel,\n      errorMessage: ''\n    },\n    maskedTextField1: {\n      className: classNames.textField,\n      content: 'A value between 00 and 59.',\n      mask: '99',\n      label: 'Minutes',\n      onClick: onClickSelection,\n      onRenderLabel\n    }\n  });\n\n  const updateErrorMessageOnMinutes = React.useMemo(() => {\n    return _debounce((errorMessage) => {\n      setState(currentState => {\n        const updatedState = _set(\n          {...currentState},\n          'maskedTextField1.errorMessage',\n          errorMessage\n        )\n        return updatedState;\n      })\n    }, 800);\n  }, [])\n\n  const debounceUpdateTextField0 = React.useMemo(() => {\n    return _debounce((update) => {\n      setState(currentState => ({\n        ...currentState,\n        maskedTextField0: {\n          ...currentState.maskedTextField0,\n          ...update\n        }\n      }))\n    }, 800);\n  }, []);\n\n  const updateTextField0 = React.useCallback((update) => {\n    setState(currentState => ({\n      ...currentState,\n      maskedTextField0: {\n        ...currentState.maskedTextField0,\n        ...update\n      }\n    }))\n  },[])\n\n  const goalForTheDayForm = {\n    form: {\n      onSubmit: React.useCallback((evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n      },[])\n    },\n    text0: {\n      ...state.text0\n    },\n    maskedTextField0: {\n      value: hours,\n      ...state.maskedTextField0,\n      onChange: React.useCallback((evt, hours) => {\n        const isValid = isInRange({\n          min: 0,\n          max: 24,\n          value: hours\n        })\n        if(isValid) {\n          debounceUpdateTextField0.cancel();\n          updateTextField0({\n            errorMessage: '',\n          })\n          onChangeGoal({hours})\n        } else {\n          debounceUpdateTextField0({\n            errorMessage: '00 - 24',\n          })\n        }\n      },[debounceUpdateTextField0, updateTextField0, onChangeGoal])\n    },\n    maskedTextField1: {\n      value: minutes,\n      ...state.maskedTextField1,\n      onChange: React.useCallback((evt, value) => {\n        const isValid = isInRange({\n          min: 0,\n          max: 59,\n          value\n        })\n        if(isValid) {\n          onChangeGoal({\n            minutes: value\n          })\n          updateErrorMessageOnMinutes('');\n        } else {\n          updateErrorMessageOnMinutes('00 - 59')\n        }\n      }, [updateErrorMessageOnMinutes, onChangeGoal])\n    }\n  }\n\n  /**\n    Disable Minutes-text-field when 24 hours set\n  */\n  React.useEffect(() => {\n    const is24 = Number(hours) === 24;\n    setState(currentState => ({\n      ...currentState,\n      maskedTextField1: {\n        ...currentState.maskedTextField1,\n        disabled: is24,\n      }\n    }))\n    if(is24) {\n      onChangeGoal({\n        minutes: '00'\n      })\n    }\n  }, [hours, onChangeGoal])\n\n  return (\n    <GoalForTheDayFormLayout {...goalForTheDayForm} />\n  )\n}\n\nGoalForTheDayForm.propTypes = {\n  onChangeGoal: PropTypes.func,\n  hours: PropTypes.string,\n  minutes: PropTypes.string\n}\n\nGoalForTheDayForm.defaultProps = {\n    hours: '09',\n    minutes: '02'\n}\n\nexport default React.memo(GoalForTheDayForm)\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {Stack, Text, DetailsList} from '@fluentui/react'\n\nconst DetailsListWithText = ({\n  show, detailsList, text\n}) => show && (\n  <Stack>\n    <Text {...text} />\n    <DetailsList {...detailsList}/>\n  </Stack>\n)\n\nDetailsListWithText.propTypes = {\n  /** hide/show the element */\n  show: PropTypes.bool,\n\n  /** [Click here](https://docs.microsoft.com/en-us/javascript/api/office-ui-fabric-react/idetailslistprops?view=office-ui-fabric-react-latest) a full  list of props. */\n  detailsList: PropTypes.object.isRequired,\n\n  /** [Click Here](https://docs.microsoft.com/en-us/javascript/api/office-ui-fabric-react/itextprops?view=office-ui-fabric-react-latest) for a full list of props */\n  text: PropTypes.object.isRequired\n}\n\nDetailsList.defaultProps = {\n  show: false,\n  detailsList: {\n    items: [\n      {Name: 'foo'},\n      {Name: 'bar'}\n    ]\n  },\n  text: {}\n}\n\nexport default React.memo(DetailsListWithText);\n","export const FORMAT = 'YYYY-MM-DD HH:mm'\n\nexport const selectInputText = ({\n  elem, startPos, endPos\n}) => {\n  elem.selectionStart = startPos;\n  elem.selectionEnd = endPos;\n}\n\nexport const selectTimeInDate = (elem) => selectInputText({\n  elem, startPos: 11, endPos: 16\n})\n\nexport const messages = {\n  START_YOUR_DAY: \"😇Start Your Day\",\n  PUNCH_IN: \"Punch In\"\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TooltipHost, MaskedTextField\n} from '@fluentui/react'\nimport moment from 'moment'\nimport {FORMAT, selectTimeInDate} from '../../shared'\n\nconst PunchInTimeCellLayout = ({\n  tooltipHost0, maskedTextField0,\n}) => (\n  <TooltipHost {...tooltipHost0}>\n    <MaskedTextField\n      {...maskedTextField0}\n    />\n  </TooltipHost>\n);\n\nconst PunchInTimeCell = ({\n  value, errorMessage,\n  onChange, onError\n}) => {\n  const [state] = React.useState({\n    tooltipHost0: {\n      content: `In ${FORMAT} format`\n    },\n    maskedTextField0: {\n      mask: '9999-99-99 99:99'\n    }\n  });\n\n  const punchInTimeCellLayout = {\n    tooltipHost0: {\n      ...state.tooltipHost0,\n    },\n    maskedTextField0: {\n      value, errorMessage,\n      ...state.maskedTextField0,\n      onClick: React.useCallback((evt) => {\n        const elem = evt.target;\n        selectTimeInDate(elem)\n      },[]),\n      onChange: React.useCallback((evt, value) => {\n        const isMasked = Boolean(String(value).match(/_/));\n        if(!isMasked) {\n          const isValid = moment(value, FORMAT).isValid();\n          if(isValid) {\n            onChange(value);\n          } else {\n            onError('invalid date/time');\n          };\n        }\n      },[onChange, onError]),\n    }\n  }\n\n  return (\n    <PunchInTimeCellLayout  {...punchInTimeCellLayout} />\n  )\n}\n\nPunchInTimeCell.propTypes = {\n  /** The value we want the component to display. */\n  value: PropTypes.string,\n  /** The error message we want the component to display*/\n  errorMessage: PropTypes.string,\n  /** The callback when a valid-date is entered by the user input. */\n  onChange: PropTypes.func,\n  /** This callback is triggerred when the user enters an invalid-date. */\n  onError: PropTypes.func,\n}\n\nexport default React.memo(PunchInTimeCell);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  MaskedTextField, PrimaryButton,\n  Stack,\n  TooltipHost, mergeStyleSets\n} from '@fluentui/react'\nimport moment from 'moment'\nimport {FORMAT, selectTimeInDate} from '../../shared'\n\nconst PunchOutTimeCellLayout = ({\n  showTextField, tooltipHost,\n  maskedTextField0, primaryButton0\n}) => showTextField ? (\n  <TooltipHost {...tooltipHost}>\n    <MaskedTextField {...maskedTextField0}/>\n  </TooltipHost>\n) : (\n  <Stack>\n    <PrimaryButton {...primaryButton0} />\n  </Stack>\n)\n\nconst classNames = mergeStyleSets({\n  primaryButton0Icon: {\n    transform: 'rotate(180deg)'\n  }\n})\n\nconst PunchOutTimeCell = ({\n  value,\n  onClick, onChange, onError,\n  errorMessage\n}) => {\n\n  const [state] = React.useState({\n    tooltipHost: {\n      content: `In ${FORMAT} format`\n    },\n    maskedTextField0: {\n      mask: '9999-99-99 99:99'\n    },\n    primaryButton0: {\n      text: 'Punch Out',\n      iconProps: {\n        className: classNames.primaryButton0Icon,\n        iconName: 'Leave'\n      },\n    }\n  });\n\n  const punchOutTimeCell = {\n    showTextField: Boolean(value),\n    tooltipHost: {\n      ...state.tooltipHost\n    },\n    maskedTextField0: {\n      ...state.maskedTextField0,\n      value, errorMessage,\n      onClick: React.useCallback((evt) => {\n        selectTimeInDate(evt.target)\n      },[]),\n      onChange: React.useCallback((evt, value) => {\n        const isMasked = Boolean(String(value).match(/_/));\n        if(!isMasked) {\n          const isValid = moment(value, FORMAT).isValid();\n          isValid ? onChange(value) : onError('invalid date/time');\n        }\n      },[onChange, onError])\n    },\n    primaryButton0: {\n      ...state.primaryButton0,\n      onClick\n    }\n  }\n\n  return <PunchOutTimeCellLayout {...punchOutTimeCell} />\n}\n\nPunchOutTimeCell.propTypes = {\n  value: PropTypes.string,\n  errorMessage: PropTypes.string,\n  onClick: PropTypes.func,\n  onChange: PropTypes.func,\n  onError: PropTypes.func\n}\n\nexport default React.memo(PunchOutTimeCell)\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport {v4 as uuid} from 'uuid'\nimport {\n  findIndex as _findIndex,\n  merge as _merge\n} from 'lodash'\nimport DetailsListWithText from '../../../../components/DetailsListWithText'\nimport PunchInTimeCell from '../PunchInTimeCell'\nimport PunchOutTimeCell from '../PunchOutCell'\nimport {FORMAT} from '../../shared'\nimport {\n  SelectionMode, mergeStyleSets,\n} from '@fluentui/react'\n\nconst classNames = mergeStyleSets({\n  detailsList: {\n    '.ms-DetailsList-headerWrapper': {\n      '.ms-FocusZone.ms-DetailsHeader': {\n        paddingTop: 0,\n        '.ms-DetailsHeader-cell': {\n          maxWidth: '50%',\n          minWidth: '50%'\n        }\n      }\n    },\n    '.ms-DetailsRow-fields': {\n      display: 'flex',\n      '.ms-DetailsRow-cell': {\n        maxWidth: '50%',\n        minWidth: '50%'\n      }\n    }\n  },\n})\n\nexport const verifyNewOutTime = ({\n    newOutTime,\n    modifiedItems,\n    id\n  }) => {\n  const newOutTimeMoment = moment(newOutTime,  'YYYY-MM-DD HH:mm');\n  const itemIndex = _findIndex(modifiedItems, ({id:mId}) => mId === id);\n  const modifiedItem = modifiedItems[itemIndex]\n\n  /**invalidate if newOutTime is > current-time\n  is new-out-time > current-time */\n  const isGreater = newOutTimeMoment > moment()\n  if(isGreater) {\n    return {\n      isValid: false,\n      errorMessage: '> current-time'\n    }\n  }\n\n  /** invalidate if newOutTime < current-in-time */\n  const isOutTimeLessThanInTime = newOutTimeMoment < moment(modifiedItem.item.inTime)\n  if(isOutTimeLessThanInTime) {\n    return {\n      isValid: false,\n      errorMessage: `< in-time`\n    }\n  }\n\n  /** invalidate if outTime is > next-slot in time */\n  const indexOfItem = _findIndex(\n    modifiedItems,\n    mItem => mItem.id === id\n  )\n  const nextItemIndex = indexOfItem + 1;\n  const hasNextItem = Boolean(modifiedItems[nextItemIndex]);\n  if(hasNextItem) {\n    const nextItem = modifiedItems[nextItemIndex].item;\n    const isGreater = newOutTimeMoment > moment(nextItem.inTime);\n    if(isGreater) {\n      return {\n        isValid: false,\n        errorMessage: '> next-slot-in-time'\n      }\n    }\n  }\n\n  return {\n    isValid: true,\n  }\n}\n\nexport const verifyNewInTime = ({\n  slots, newInTime, item\n}) => {\n  const newInTimeMoment = moment(newInTime, 'YYYY-MM-DD HH:mm');\n\n  // check if less than current time\n  const isGreaterThanCurrentTime = newInTimeMoment > moment();\n  if(isGreaterThanCurrentTime) {\n    return {\n      isValid: false,\n      errorMessage: '> than current-time'\n    }\n  }\n\n  // test IF the time is less than previos outTime IF there is\n  // a previous out time (newInTime should not be greater than previous out time)\n  const itemIndex = _findIndex(\n    slots,\n    fItem => item.id === fItem.id\n  )\n  if(itemIndex > 0) {\n    const previousItemIndex = itemIndex - 1;\n    const previousItem = slots[previousItemIndex].item;\n    const prevOutTime = previousItem.outTime;\n    const isPrevOutTimeLessThanNewInTime = newInTimeMoment.valueOf() <= prevOutTime;\n    if(isPrevOutTimeLessThanNewInTime) {\n      return {\n        isValid: false,\n        errorMessage: `< prev out`\n      }\n    }\n  }\n\n  // newInTime should be less than or equal to current outTime\n  const {outTime} = item.item;\n  if(outTime) {\n    const isOutTimeLessThanNewInTime = outTime <= newInTimeMoment.valueOf()\n    if(isOutTimeLessThanNewInTime) {\n      return {\n        isValid: false,\n        errorMessage: `> current out.`\n      }\n    }\n  }\n\n  // if not invalid; return isValid = true\n  return {\n    isValid: true\n  }\n}\n\nconst PunchedSlots = ({\n  items, onUpdatePunchSlot\n}) => {\n  const [state, setState] = React.useState({\n    text: {\n      children: '🕰️Punched Slots',\n      variant: 'mediumPlus'\n    },\n    detailsList: {\n      className: classNames.detailsList,\n      items: [],\n      selectionMode: SelectionMode.none,\n      columns: [\n        {\n          id: uuid(),\n          key: 'punch-in-time',\n          name: 'In Time',\n          fieldName: 'punchInTime',\n          isResizable: false,\n          onRender: ({punchInTimeCell}) => <PunchInTimeCell\n            {...punchInTimeCell}\n          />\n        },\n        {\n          id: uuid(),\n          key: 'punch-out-time',\n          name: 'Out Time',\n          fieldName: 'punchOutTime',\n          isResizable: false,\n          onRender: ({punchOutTimeCell}) => <PunchOutTimeCell {...punchOutTimeCell} />\n        }\n      ]\n    }\n  });\n\n  const detailsListWithText = {\n    show: React.useMemo(\n      () => Boolean(state.detailsList.items.length),\n      [state.detailsList.items.length]\n    ),\n    detailsList: {\n      ...state.detailsList\n    },\n    text: {\n      ...state.text\n    }\n  };\n\n  const updateDetailsList = React.useCallback((update) => {\n    setState((currentState) => ({\n      ...currentState,\n      detailsList: {\n        ...currentState.detailsList,\n        ...update\n      }\n    }))\n  },[])\n\n  const updateDetailsListItem = React.useCallback((update) => {\n    setState(currentState => {\n      const updatedItems = currentState\n        .detailsList\n        .items\n        .map((item) => {\n          if(update.id === item.id) {\n            return _merge(\n              item,\n              update\n            )\n          } else {\n            return item\n          }\n        })\n      return {\n        ...currentState,\n        detailsList: {\n          ...currentState.detailsList,\n          items: updatedItems\n        }\n      }\n    })\n  }, [])\n\n  /** Update DetailsList items when items are updated */\n  React.useEffect(() => {\n    const updatedItems = items.map((item, idx) => ({\n      item,\n      id: item.id,\n      punchInTimeCell: {\n        value: moment(item.inTime).format(FORMAT),\n        onChange: (newInTime) => {\n          const {\n            isValid,\n            errorMessage = ''\n          } = verifyNewInTime({\n            newInTime,\n            slots: updatedItems,\n            item: updatedItems.find(uItem => uItem.id === item.id)\n          })\n          updateDetailsListItem({\n            id: item.id,\n            punchInTimeCell: {\n              errorMessage\n            }\n          })\n          if(isValid) {\n            onUpdatePunchSlot({\n              id: item.id,\n              inTime: moment(newInTime, FORMAT).valueOf(),\n            })\n          }\n        },\n        onError: (errorMessage) => updateDetailsListItem({\n          id: item.id,\n          punchInTimeCell: {\n            errorMessage\n          }\n        })\n      },\n      punchOutTimeCell: {\n        value: item.outTime && moment(item.outTime).format(FORMAT),\n        onChange: (newOutTime) => {\n          const {\n            isValid, errorMessage = ''\n          } = verifyNewOutTime({\n            newOutTime,\n            modifiedItems: updatedItems,\n            id: item.id\n          })\n          updateDetailsListItem({\n            id: item.id,\n            punchOutTimeCell: {\n              errorMessage\n            }\n          })\n          if(isValid) {\n            onUpdatePunchSlot({\n              id: item.id,\n              outTime: moment(newOutTime, FORMAT).valueOf()\n            })\n          }\n        },\n        onError: (errorMessage) => {\n          updateDetailsListItem({\n            id: item.id,\n            punchOutTimeCell: {\n              errorMessage\n            }\n          })\n        },\n        onClick: () => {\n          onUpdatePunchSlot({\n            id: item.id,\n            outTime: moment().valueOf()\n          })\n        }\n      }\n    }));\n    updateDetailsList({\n      items: updatedItems\n    })\n  }, [\n    items, updateDetailsList,\n    updateDetailsListItem, onUpdatePunchSlot\n  ])\n\n  return <DetailsListWithText {...detailsListWithText} />\n}\n\nPunchedSlots.propTypes = {\n  items: PropTypes.array.isRequired,\n  onUpdatePunchSlot: PropTypes.func\n}\n\nexport default React.memo(PunchedSlots);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Stack, PrimaryButton, DefaultButton,\n  IconButton\n} from '@fluentui/react';\n\nconst PunchCardButtonsLayout = ({\n  primaryButton, defaultButton,\n  iconButton\n}) => (\n\n  <Stack horizontal\n    tokens={{childrenGap: 10}}\n  >\n    <PrimaryButton\n      {...primaryButton}\n    />\n    <DefaultButton\n      {...defaultButton}\n    />\n    <IconButton {...iconButton}/>\n  </Stack>\n\n);\n\nconst PunchCardButtons = ({\n  onClickPunchIn, onClickAddScheduledSlot,\n  punchInText,\n  showIcon, punchInDisabled\n}) => {\n  const punchCardButtons = {\n    primaryButton: {\n      text: punchInText,\n      iconProps: React.useMemo(\n        () => showIcon && ({\n          iconName: 'Leave'\n        }),\n        [showIcon]\n      ),\n      disabled: punchInDisabled,\n      onClick: onClickPunchIn\n    },\n    defaultButton: {\n      className: 'ms-hiddenSm',\n      text: 'Add Scheduled Slot',\n      iconProps: {\n        iconName: 'Add'\n      },\n      onClick: onClickAddScheduledSlot\n    },\n    iconButton: {\n      className: 'ms-hiddenMdUp',\n      iconProps: {\n        iconName: 'Add'\n      },\n      onClick: onClickAddScheduledSlot\n    }\n  };\n\n  return (\n    <PunchCardButtonsLayout {...punchCardButtons} />\n  )\n}\n\nPunchCardButtons.propTypes = {\n  showIcon: PropTypes.bool,\n  punchInText: PropTypes.string,\n  onClickAddScheduledSlot: PropTypes.func,\n  onClickPunchIn: PropTypes.func\n}\n\nexport default React.memo(PunchCardButtons)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CustomLabelVariantA} from '../../../../../components/CustomLabel/variantA'\nimport {\n  MaskedTextField, PrimaryButton,\n  Stack, mergeStyleSets\n} from '@fluentui/react'\nimport moment from 'moment'\nimport {v4 as uuid} from 'uuid'\n\nconst ScheduledSlotFormLayout = ({\n  form,\n  maskedTextField0, maskedTextField1,\n  primaryButton0\n}) => (\n  <form {...form}>\n    <Stack tokens={{childrenGap: 10 }}>\n      <Stack.Item>\n        <Stack horizontal tokens={{childrenGap: 5}}>\n          <MaskedTextField\n            {...maskedTextField0}\n          />\n          <MaskedTextField\n            {...maskedTextField1}\n          />\n        </Stack>\n      </Stack.Item>\n      <PrimaryButton\n        {...primaryButton0}\n      />\n    </Stack>\n  </form>\n);\n\nconst FORMAT = 'YYYY-MM-DD HH:mm'\n\nexport const getIsOk2Submit = ({\n  inTime, outTime\n}) => {\n  const FORMAT = 'YYYY-MM-DD HH:mm'\n  const inTimeMoment = moment(inTime, FORMAT);\n  const outTimeMoment = moment(outTime, FORMAT);\n  const isoutTimeGreaterThaninTime = outTimeMoment > inTimeMoment;\n  const momentsAreValid = inTimeMoment.isValid() && outTimeMoment.isValid();\n  const isOK2Submit = isoutTimeGreaterThaninTime && momentsAreValid;\n  if(isOK2Submit) {\n    return {\n      inTime: inTimeMoment.valueOf(),\n      outTime: outTimeMoment.valueOf()\n    }\n  }\n  return false;\n}\n\nconst onDateTimeFieldClick = (evt) => {\n  const elem = evt.target;\n  elem.selectionStart = 11;\n  elem.selectionEnd = 16;\n}\n\nconst getInitialValue = hours => moment()\n  .add(hours, 'hours')\n  .startOf('hour')\n  .format(FORMAT)\n\nconst ScheduledSlotForm = ({\n  onSubmit\n}) => {\n  const classNames = React.useMemo(() => mergeStyleSets({\n    textField: {\n      maxWidth: 130\n    }\n  }),[])\n\n  const [state, setState] = React.useState({\n    maskedTextField0: {\n      className: classNames.textField,\n      label:\"Start Time *\",\n      content:`In ${FORMAT} format...`,\n      required: true,\n      mask:\"9999-99-99 99:99\",\n      text:\"Hello\",\n      onRenderLabel:(props) => <CustomLabelVariantA {...props} />,\n      onClick: onDateTimeFieldClick,\n      value: getInitialValue(1),\n    },\n    maskedTextField1: {\n      className: classNames.textField,\n      label: \"End Time *\",\n      content: `In ${FORMAT} format...`,\n      required: true,\n      mask:\"9999-99-99 99:99\",\n      value: getInitialValue(2),\n      onClick: onDateTimeFieldClick,\n      onRenderLabel: (props) =>  <CustomLabelVariantA {...props} />\n    },\n    primaryButton0: {\n      type:\"submit\",\n      text:\"Add Slot\",\n      iconProps:{\n        iconName: 'Add'\n      }\n    }\n  });\n\n  const updateMaskedTextField0Value = React.useCallback((evt, value) => {\n    setState(currentState => ({\n      ...currentState,\n      maskedTextField0: {\n        ...currentState.maskedTextField0,\n        value\n      },\n    }))\n  },[])\n\n  const updateMaskedTextField1Value = React.useCallback((evt, value) => {\n    setState(currentState => ({\n      ...currentState,\n      maskedTextField1: {\n        ...currentState.maskedTextField1,\n        value\n      },\n    }))\n  },[])\n\n  const resetFields = React.useCallback(() => {\n    setState(currentState => ({\n      ...currentState,\n      maskedTextField0: {\n        ...currentState.maskedTextField0,\n        value: ''\n      },\n      maskedTextField1: {\n        ...currentState.maskedTextField1,\n        value: ''\n      },\n    }))\n  },[])\n\n  const scheduledSlotForm =  {\n    form: {\n      onSubmit: React.useCallback((evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        const startEndTime = getIsOk2Submit({\n          inTime: state.maskedTextField0.value,\n          outTime: state.maskedTextField1.value\n        });\n        if(startEndTime) {\n          onSubmit({\n            id: uuid(),\n            ...startEndTime\n          })\n          resetFields()\n        }\n      },[\n        onSubmit, resetFields,\n        state.maskedTextField0.value,\n        state.maskedTextField1.value,\n      ])\n    },\n    maskedTextField0: {\n      ...state.maskedTextField0,\n      onChange: updateMaskedTextField0Value\n    },\n    maskedTextField1: {\n      ...state.maskedTextField1,\n      onChange: updateMaskedTextField1Value\n    },\n    primaryButton0: {\n      ...state.primaryButton0\n    }\n  }\n\n  return <ScheduledSlotFormLayout {...scheduledSlotForm} />\n}\n\nScheduledSlotForm.propTypes = {\n  onSubmit: PropTypes.func\n};\n\nexport default React.memo(ScheduledSlotForm);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Panel} from '@fluentui/react'\nimport ScheduledSlotForm from './ScheduledSlotForm'\n\nconst AddScheduledSlotPanelLayout = ({\n  show, panel, scheduledSlotForm\n}) => show && (\n  <Panel {...panel}>\n    <ScheduledSlotForm {...scheduledSlotForm} />\n  </Panel>\n)\n\nconst AddScheduledSlotPanel = ({\n  isOpen, onAddScheduledSlot,\n  onDismiss\n}) => {\n\n  const [state, setState] = React.useState({\n    panel: {\n      isOpen: false\n    }\n  })\n\n  const updatePanel = React.useCallback((update) => {\n    setState(currentState => ({\n      ...currentState,\n      panel: {\n        ...currentState.panel,\n        ...update\n      }\n    }))\n  }, [])\n\n  const addScheduledSlotPanel = {\n    show: state.panel.isOpen,\n    scheduledSlotForm: {\n      onSubmit: onAddScheduledSlot\n    },\n    panel: {\n      ...state.panel,\n      isLightDismiss: true,\n      headerText: 'Add Scheduled Slot',\n      onDismiss: React.useCallback(() => {\n        updatePanel({isOpen: false})\n        onDismiss()\n      }, [updatePanel, onDismiss])\n    }\n  }\n\n  React.useEffect(() => {\n    updatePanel({\n      isOpen\n    })\n  }, [isOpen, updatePanel])\n\n  return <AddScheduledSlotPanelLayout {...addScheduledSlotPanel} />\n}\n\nAddScheduledSlotPanel.propTypes = {\n  isOpen: PropTypes.bool,\n  onAddScheduledSlot: PropTypes.func,\n  onDismiss: PropTypes.func,\n}\n\nexport default React.memo(AddScheduledSlotPanel);\n","import React from 'react';\nimport {Spinner as FarbicSpinner} from '@fluentui/react'\n\nconst SpinnerLayout = ({\n  show, spinner\n}) => show && <FarbicSpinner {...spinner} />\n\nconst Spinner = ({ show }) => {\n  const spinner = {\n    show\n  }\n  return <SpinnerLayout {...spinner} />\n}\n\nexport default React.memo(Spinner);\n","import React  from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  IconButton, SelectionMode,\n  mergeStyleSets\n} from '@fluentui/react'\nimport DetailsListWithText from '../../../../components/DetailsListWithText'\nimport DateTimeTextField from '../PunchInTimeCell'\nimport {FORMAT} from '../../shared'\nimport moment from 'moment'\nimport {verifyNewInTime, verifyNewOutTime} from '../PunchedSlots'\n\nconst InTextField = ({inTextField}) => <DateTimeTextField {...inTextField}/>\n\nconst OutTextField = ({outTextField}) => <DateTimeTextField {...outTextField}/>\n\nconst classNames = mergeStyleSets({\n  detailsList: {\n    '.ms-FocusZone.ms-DetailsHeader': {\n      paddingTop: 0\n    },\n    '.ms-DetailsList-headerWrapper': {\n      '.ms-DetailsHeader-cell': {\n        maxWidth: 'calc(50% - 15px) !important',\n        minWidth: 'calc(50% - 15px) !important',\n      },\n      '.ms-DetailsHeader-cell[data-item-key=\"deleteicon\"]': {\n        width: '30px !important',\n        maxWidth: '30px !important',\n        minWidth: '30px !important',\n      }\n    },\n    '.ms-List-cell': {\n      '.ms-DetailsRow': {\n        minWidth: '100% !important',\n        '.ms-DetailsRow-fields': {\n          width: '100%',\n          '.deleteIconColumn.ms-DetailsRow-cell': {\n            minWidth: '30px !important',\n            maxWidth: '30px !important',\n          },\n          '.ms-DetailsRow-cell': {\n            minWidth: 'calc(50% - 15px)',\n            maxWidth: 'calc(50% - 15px)',\n          }\n        }\n      }\n    }\n  }\n})\n\nconst ScheduledSlots = ({\n  items, onDeleteSlot, onChangeSlot\n}) => {\n  const [state, setState] = React.useState({\n    detailsList: {\n      items: []\n    }\n  })\n\n  const updateDetailsList = React.useCallback((update) => {\n    setState(currenState => ({\n      ...currenState,\n      detailsList: {\n        ...currenState.detailsList,\n        ...update\n      }\n    }))\n  },[])\n\n  const detailsListWithText = {\n    show: Boolean(items.length),\n    detailsList: {\n      ...state.detailsList,\n      className: classNames.detailsList,\n      selectionMode: SelectionMode.none,\n      columns: [{\n        key: 'inTime',\n        name: 'In Time',\n        onRender: InTextField\n      },{\n        key: 'outTime',\n        name: 'Out Time',\n        onRender: OutTextField\n      },{\n        key: \"deleteicon\",\n        className: 'deleteIconColumn',\n        onRender: ({deleteIconButton}) => <IconButton\n          iconProps={{iconName: 'Trash'}}\n          {...deleteIconButton}\n        />\n      }],\n    },\n    text: {\n      children: '🕚Scheduled Slots',\n      variant: 'mediumPlus'\n    }\n  }\n\n  /** Customize Items for DetailsList*/\n  React.useEffect(() => {\n    const updatedItems = items\n      .map(item => ({\n        id: item.id,\n        item,\n        inTextField: {\n          value: moment(item.inTime).format(FORMAT),\n          onError: (errorMessage) => updateDetailsList({\n            items: updatedItems.map(uItem => uItem.id === item.id ?\n              ({\n                  ...uItem,\n                  inTextField: {\n                    ...uItem.inTextField,\n                    errorMessage\n                  }\n              }) : uItem)\n          }),\n          onChange: (newInTime) => {\n            const {\n              isValid,\n              errorMessage = ''\n            } = verifyNewInTime({\n              newInTime,\n              slots: updatedItems,\n              item: updatedItems.find(uItem => uItem.id === item.id)\n            })\n            updateDetailsList({\n              items: updatedItems.map(uItem => uItem.id === item.id ?\n                ({\n                    ...uItem,\n                    inTextField: {\n                      ...uItem.inTextField,\n                      errorMessage\n                    }\n                }) : uItem)\n            })\n            if(isValid) {\n              onChangeSlot({\n                id: item.id,\n                inTime: moment(newInTime, FORMAT).valueOf(),\n              })\n            }\n          }\n        },\n        outTextField: {\n          value: moment(item.outTime).format(FORMAT),\n          onError: (errorMessage) => updateDetailsList({\n            items: updatedItems.map(uItem => uItem.id === item.id ?\n              ({\n                  ...uItem,\n                  outTextField: {\n                    ...uItem.outTextField,\n                    errorMessage\n                  }\n              }) : uItem)\n          }),\n          onChange: (newOutTime) => {\n            const {\n              isValid, errorMessage = ''\n            } = verifyNewOutTime({\n              newOutTime,\n              modifiedItems: updatedItems,\n              id: item.id\n            })\n            updateDetailsList({\n              items: updatedItems.map(uItem => uItem.id === item.id ?\n                ({\n                    ...uItem,\n                    outTextField: {\n                      ...uItem.outTextField,\n                      errorMessage\n                    }\n                }) : uItem)\n            })\n            if(isValid) {\n              onChangeSlot({\n                id: item.id,\n                outTime: moment(newOutTime, FORMAT).valueOf()\n              })\n            }\n          },\n        },\n        deleteIconButton: {\n          onClick: () => onDeleteSlot(item)\n        }\n      }))\n\n    updateDetailsList({\n      items: updatedItems\n    })\n  },[updateDetailsList, items, onDeleteSlot, onChangeSlot])\n\n  return <DetailsListWithText {...detailsListWithText} />\n}\n\nScheduledSlots.propTypes = {\n  items: PropTypes.array,\n\n  onDeleteSlot: PropTypes.func,\n  onChangeSlot: PropTypes.func\n}\n\n\nexport default React.memo(ScheduledSlots)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { MessageBar, MessageBarType, mergeStyleSets } from '@fluentui/react'\n\nconst classNames = mergeStyleSets({\n  messageBar: {\n    maxWidth: 185\n  }\n})\n\n// https://stackoverflow.com/a/38242552/4742733\nexport const convertMinutesToHours = (mins) => {\n  if(!mins || isNaN(Number(mins))) return '00:00'\n  const prefix = (() => {\n    if(mins < 0) return '- '\n    return ''\n  })();\n  mins = Math.abs(mins)\n  let h = Math.floor(mins / 60);\n  let m = mins % 60;\n  h = h < 10 ? '0' + h : h;\n  m = m < 10 ? '0' + m : m;\n  return `${prefix}${h}:${m}`;\n}\n\nconst InfoBarLayout = ({\n  messageBar, content,\n}) => (\n  <MessageBar {...messageBar}>\n    {content}\n  </MessageBar>\n)\n\nconst InfoBar = ({\n  minutesLeft,\n}) => {\n  const [state, setState] = React.useState({\n    hoursLeft: 0,\n    messageBar: {\n      className: classNames.messageBar,\n      messageBarType : MessageBarType.info\n    }\n  })\n  const infoBar = {\n    messageBar: {\n      ...state.messageBar\n    },\n    content: React.useMemo(\n      () => `${state.hoursLeft} hrs to go...`,\n      [state.hoursLeft]\n    ),\n  }\n\n  React.useEffect(() =>  {\n    const hoursLeft = convertMinutesToHours(minutesLeft)\n    setState(currentState => ({\n      ...currentState,\n      hoursLeft\n    }))\n  },[minutesLeft])\n\n  return <InfoBarLayout {...infoBar}/>\n}\n\nInfoBar.propTypes = {\n  minutesLeft: PropTypes.number\n}\n\nexport default React.memo(InfoBar)\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {v4 as uuid} from 'uuid'\nimport moment from 'moment'\nimport { Stack, Text} from '@fluentui/react'\nimport PunchedProgress from './PunchedProgress'\nimport GoalForTheDayForm from './GoalForTheDayForm'\nimport PunchedSlots from './PunchedSlots'\nimport PunchCardButtons from './PunchCardButtons'\nimport AddScheduledSlotPanel from './AddScheduledSlotPanel'\nimport Spinner from './Spinner'\nimport {messages} from '../shared'\nimport ScheduledSlots from './ScheduledSlots'\nimport InfoBar from './InfoBar'\n\nconst PunchCardLayout = ({\n  show,\n  text,\n  goalForTheDayForm, punchedSlots,\n  punchCardButtons, punchedProgress,\n  addScheduledSlotPanel, spinner,\n  scheduledSlots, scheduledProgress,\n  infoBar\n}) => (\n  show && <Stack vertical tokens={{childrenGap: 10}}>\n    <Stack horizontal tokens={{childrenGap: 5}}>\n      <Text {...text} /> <Spinner {...spinner} />\n    </Stack>\n    <AddScheduledSlotPanel {...addScheduledSlotPanel} />\n    <GoalForTheDayForm {...goalForTheDayForm} />\n    <InfoBar {...infoBar} />\n    <PunchedSlots {...punchedSlots} />\n    <PunchCardButtons {...punchCardButtons} />\n    <ScheduledSlots {...scheduledSlots}/>\n    <PunchedProgress {...punchedProgress} />\n    <div dir=\"rtl\">\n      <PunchedProgress {...scheduledProgress} />\n    </div>\n  </Stack>\n);\n\nconst {\n  START_YOUR_DAY,  PUNCH_IN\n} = messages;\n\nexport const getGoalInMinutes = (goalForTheDay = {}) => {\n  const {\n    hours = '00',\n    minutes = '00'\n  } = goalForTheDay;\n  const goaInMinutes = (Number(hours) * 60) + Number(minutes)\n  return goaInMinutes;\n}\n\nexport const getMinutesFromSlots = ({slots}) => {\n  if(!slots.length) return 0;\n  const minutes = slots\n    .reduce((loop, {inTime, outTime}) => {\n      if(!inTime || !outTime) {\n        return loop\n      }\n      const minutesDiff = moment(outTime).diff(inTime, 'minutes')\n      return minutesDiff + loop\n    }, 0)\n  return minutes;\n}\n\nexport const enablePunchInButton = ({items}) => {\n  if(!items.length) return true;\n  const lastIndex = items.length - 1;\n  const show = items[lastIndex].outTime;\n  return Boolean(show);\n}\n\nexport const getPercentComplete = ({items}) => {\n  return 0.2;\n}\n\nexport const getPunchInButtonText = (numberOfItems) => Boolean(numberOfItems) ? PUNCH_IN : START_YOUR_DAY;\n\n/**\n  The Punch Card Component will\n  display the punch-card details\n  such as `goal-for-the-day`,\n  `punchedSlots`, etc.\n\n  It also gives you an API for updating\n  the goal for the punch-card with `onChangeGoal`, adding a punched-slot with\n  `onAddPunchedSlot`, editing a punched-slot with\n  `onUpdatePunchSlot`, etc.\n*/\nconst PunchCard = ({\n  id,\n  punchedSlots, title,\n  goalForTheDay,\n  scheduledSlots,\n\n  onUpdatePunchSlot,\n  onAddPunchedSlot,\n  onAddScheduledSlot,\n\n  onDeleteScheduledSlot,\n  onChangeScheduledSlot,\n\n  onChangeGoal,\n}) => {\n  const [state, setState] = React.useState({\n    goaInMinutes: 0,\n    minutesLeft: 0,\n    punchedMinutes: 0,\n    scheduledMinutes: 0,\n    punchedPercent: 0,\n    scheduledPercent: 0,\n    addScheduledSlotPanel: {\n      isOpen: false\n    },\n    spinner: {\n      show: false\n    },\n    punchedProgress: {\n      label: <Text variant=\"mediumPlus\">⏳Punched</Text>\n    },\n    scheduledProgress: {\n      label: <Text variant=\"mediumPlus\">🕚 Scheduled </Text>\n    },\n  });\n\n  const updateAddScheduledSlotPanel = React.useCallback((update) => {\n    setState(currentState => ({\n      ...currentState,\n      addScheduledSlotPanel: {\n        ...currentState.addScheduledSlotPanel,\n        ...update\n      }\n    }))\n  },[]);\n\n  const updateSpinner = React.useCallback((update) => {\n    setState(currentState => ({\n      ...currentState,\n      spinner: {\n          ...currentState.spinner,\n          ...update\n      }\n    }))\n  },[])\n\n  const punchCard = {\n    show: React.useMemo(() => Boolean(id), [id]),\n    spinner: {\n      ...state.spinner\n    },\n    text: {\n      children: title,\n      variant: 'large'\n    },\n    goalForTheDayForm: {\n      ...goalForTheDay,\n      onChangeGoal: React.useCallback((update) => {\n        onChangeGoal({\n          id,\n          goalForTheDay: {\n            ...goalForTheDay,\n            ...update\n          }\n        })\n      }, [onChangeGoal, goalForTheDay, id])\n    },\n    punchedSlots: {\n      onUpdatePunchSlot: React.useCallback(async(updatedItem) => {\n        updateSpinner({show: true})\n        try {\n          const updatedPunchSlotItems = punchedSlots\n            .map(item => updatedItem.id === item.id ? ({\n              ...item,\n              ...updatedItem\n            }) : item)\n          await onUpdatePunchSlot({\n            id,\n            punchedSlots: updatedPunchSlotItems\n          });\n        } catch (e) {\n          console.error('punch-slot did not update', e)\n        } finally {\n          updateSpinner({show: false})\n        }\n      },[punchedSlots, onUpdatePunchSlot, updateSpinner, id]),\n      items: punchedSlots\n    },\n    punchCardButtons: {\n      punchInText: React.useMemo(\n        () => getPunchInButtonText(punchedSlots.length),\n      [punchedSlots.length]),\n      onClickPunchIn: React.useCallback(() => {\n        const newPunchedSlot = {\n          id: uuid(),\n          inTime: Date.now(),\n          outTime: null\n        };\n        onAddPunchedSlot({\n          id,\n          punchedSlots: [\n            ...punchedSlots,\n            newPunchedSlot\n          ]\n        })\n      },[onAddPunchedSlot, punchedSlots, id]),\n      onClickAddScheduledSlot: React.useCallback(() => {\n        updateAddScheduledSlotPanel({isOpen: true})\n      },[updateAddScheduledSlotPanel]),\n      punchInDisabled: React.useMemo(\n        () => !enablePunchInButton({\n          items: punchedSlots\n        }),\n          [punchedSlots]\n        ),\n      showIcon: React.useMemo(\n        () => Boolean(punchedSlots.length),\n        [punchedSlots.length]\n      )\n    },\n    punchedProgress: {\n      ...state.punchedProgress,\n      show: React.useMemo(\n        () => Boolean(punchedSlots.length),\n        [punchedSlots.length]\n      ),\n      progress: state.punchedPercent\n    },\n    addScheduledSlotPanel: {\n      ...state.addScheduledSlotPanel,\n      onAddScheduledSlot: React.useCallback((scheduledSlot) => {\n        onAddScheduledSlot({\n          id,\n          scheduledSlots: [\n            ...scheduledSlots,\n            scheduledSlot\n          ]\n        })\n        updateAddScheduledSlotPanel({\n          isOpen: false\n        })\n      },[\n        updateAddScheduledSlotPanel,\n        onAddScheduledSlot,\n        scheduledSlots, id\n      ]),\n      onDismiss: React.useCallback(() => {\n        updateAddScheduledSlotPanel({isOpen: false})\n      },[updateAddScheduledSlotPanel])\n    },\n    scheduledSlots: {\n      items: scheduledSlots,\n      onDeleteSlot: React.useCallback((deletedSlot) => {\n        const updatedSlots = scheduledSlots\n          .filter(slot => slot.id !== deletedSlot.id);\n        onDeleteScheduledSlot({\n          id,\n          scheduledSlots: updatedSlots\n        });\n      },[onDeleteScheduledSlot, scheduledSlots, id]),\n      onChangeSlot: React.useCallback((updatedSlot) => {\n        const updatedSlots = scheduledSlots\n          .map(slot => slot.id === updatedSlot.id ? ({\n            ...slot,\n            ...updatedSlot\n          }): slot)\n        onChangeScheduledSlot({\n          id,\n          scheduledSlots: updatedSlots\n        })\n      },[onChangeScheduledSlot, scheduledSlots, id])\n    },\n    scheduledProgress: {\n      ...state.scheduledProgress,\n      show: React.useMemo(\n        () => Boolean(scheduledSlots.length),\n        [scheduledSlots.length]\n      ),\n      progress: state.scheduledPercent\n    },\n    infoBar: {\n      minutesLeft: React.useMemo(\n        () => state.minutesLeft,\n        [state.minutesLeft]\n      )\n    }\n  }\n\n  /**Effect when punchedSlots or goalForTheDay is updated*/\n  React.useEffect(() => {\n    const goalInMinutes = getGoalInMinutes(goalForTheDay);\n    const punchedMinutes = getMinutesFromSlots({\n      slots: punchedSlots\n    });\n    const scheduledMinutes = getMinutesFromSlots({\n      slots: scheduledSlots\n    })\n    const punchedPercent = (() => {\n      if(!goalInMinutes) return 0\n      return (punchedMinutes/goalInMinutes)\n    })()\n    const scheduledPercent = (() => {\n      if(!goalInMinutes) return 0\n      return (scheduledMinutes/goalInMinutes)\n    })()\n    const minutesLeft = goalInMinutes ? goalInMinutes - punchedMinutes : 0;\n    setState(currentState => ({\n      ...currentState,\n      goalInMinutes,\n      punchedMinutes,\n      scheduledMinutes,\n      punchedPercent, scheduledPercent,\n      minutesLeft\n    }))\n  },[punchedSlots, goalForTheDay, scheduledSlots])\n\n  return <PunchCardLayout {...punchCard} />\n}\n\nPunchCard.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n\n  goalForTheDay: PropTypes.shape({\n    hours: PropTypes.string.isRequired,\n    minutes: PropTypes.string.isRequired\n  }),\n\n  punchedSlots: PropTypes.array,\n  scheduledSlots: PropTypes.array,\n\n  onChangeGoal: PropTypes.func,\n  onUpdatePunchSlot: PropTypes.func,\n  onAddPunchedSlot: PropTypes.func,\n  onAddScheduledSlot: PropTypes.func,\n  onDeleteScheduledSlot: PropTypes.func,\n  onChangeScheduledSlot: PropTypes.func,\n}\n\nPunchCard.defaultProps = {\n  punchedSlots: [],\n  scheduledSlots: []\n}\n\nexport default React.memo(PunchCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack, TextField, PrimaryButton,\n  IconButton\n} from '@fluentui/react'\n\nconst NewPunchCardFormLayout = ({\n  textField0, iconButton0, primaryButton0,\n  form\n}) => (\n  <form {...form}>\n    <Stack horizontal tokens={{childrenGap: 10}}>\n      <TextField\n        {...textField0}\n      />\n      <IconButton\n        {...iconButton0}\n      />\n      <PrimaryButton\n        {...primaryButton0}\n      />\n    </Stack>\n  </form>\n)\n\nconst NewPunchCardForm = ({\n  onSubmit\n}) => {\n  const [state, setState] = React.useState({\n    textField0: {\n      value: '',\n      placeholder: \"Punch Card Name...\",\n    },\n    iconButton0: {\n      type: 'submit',\n      className: 'ms-hiddenMdUp',\n      title: 'Add Punch Card',\n      iconProps:{\n        iconName: 'Add'\n      },\n    },\n    primaryButton0: {\n      className:\"ms-hiddenSm\",\n      type:\"submit\",\n      iconProps:{\n        iconName: 'Add'\n      },\n      text: 'Add Punch Card',\n      title: 'Add Punch Card',\n    }\n  });\n\n  const updateTextField0 = React.useCallback((evt, value) => {\n    setState(currentState => ({\n      ...currentState,\n      textField0: {\n        ...currentState.textField0,\n        value\n      }\n    }))\n  },[])\n\n  const punchCardForm = {\n    textField0: {\n      ...state.textField0,\n      onChange: updateTextField0,\n    },\n    iconButton0: {\n      ...state.iconButton0,\n      disabled: !state.textField0.value.trim(),\n    },\n    primaryButton0: {\n      ...state.primaryButton0,\n      disabled: !state.textField0.value.trim()\n    },\n    form: {\n      onSubmit: React.useCallback((evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        onSubmit(state.textField0.value);\n        updateTextField0(null, '');\n      },[state.textField0.value, onSubmit, updateTextField0])\n    }\n  };\n\n  return (\n    <NewPunchCardFormLayout {...punchCardForm} />\n  )\n}\n\nNewPunchCardForm.propTypes = {\n  onSubmit: PropTypes.func\n};\n\nexport default React.memo(NewPunchCardForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  IconButton, Text\n} from '@fluentui/react'\n\nconst PunchCardListItemLayout = ({\n  iconButton0, iconButton1,\n  text\n}) => (\n  <Text variant=\"large\" as=\"em\">\n    <IconButton\n      {...iconButton0}\n    />\n    {text}\n    <IconButton {...iconButton1}/>\n  </Text>\n)\n\nconst PunchCardListItemWithoutMemo= ({\n  onEdit, onDelete, title\n}) => {\n  const punchCardListItem = {\n    iconButton0: {\n      primary: true,\n      iconProps: {\n        iconName: 'Edit'\n      },\n      onClick: onEdit\n    },\n    iconButton1: {\n      iconProps: {\n        iconName: 'Delete'\n      },\n      onClick: onDelete\n    },\n    text: title\n  }\n\n  return <PunchCardListItemLayout\n    {...punchCardListItem}\n  />\n}\n\nPunchCardListItemWithoutMemo.propTypes = {\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  title: PropTypes.string\n}\n\nexport const PunchCardListItem = React.memo(PunchCardListItemWithoutMemo)\n\nconst PunchCards = ({punchCards}) => Array.isArray(punchCards) && punchCards\n  .map((punchCard) => {\n    return <PunchCardListItem key={punchCard.id} {...punchCard} />\n  })\n\nexport default React.memo(PunchCards);\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {Panel, Stack} from '@fluentui/react'\nimport PunchCardsList  from './PunchCards'\n\nconst PunchCardsPanelLayout = ({\n  show, panel, punchCardsList\n}) => show && (\n  <Panel {...panel}>\n    <Stack vertical>\n      <PunchCardsList {...punchCardsList} />\n    </Stack>\n  </Panel>\n);\n\nPunchCardsPanelLayout.defaultProps = {\n  show: false\n}\n\nconst PunchCardsPanel = ({\n  items, isOpen,\n  onDismiss, onDeletePunchCard,\n  onSelectPunchCard,\n}) => {\n  const [state, setState] = React.useState({\n    panel: {\n      isOpen: true\n    },\n    punchCardsList: {\n      punchCards: []\n    }\n  })\n\n  const updatePunchCardsList = React.useCallback((update) => {\n    setState(currentState => ({\n      ...currentState,\n      punchCardsList: {\n        ...currentState.punchCardsList,\n        ...update\n      }\n    }))\n  }, [])\n\n  const punchCardsPanel = {\n    show: isOpen,\n    panel: {\n      isOpen,\n      onDismiss,\n      headerText:'Punch Cards',\n    },\n    punchCardsList: {\n      ...state.punchCardsList\n    }\n  }\n\n  React.useEffect(() => {\n    const updatedItems = items.map((item) => ({\n      ...item,\n      onEdit: () => onSelectPunchCard(item.id),\n      onDelete: () => onDeletePunchCard(item.id)\n    }))\n    updatePunchCardsList({\n      punchCards: updatedItems\n    })\n  }, [items, updatePunchCardsList, onSelectPunchCard, onDeletePunchCard])\n\n  return <PunchCardsPanelLayout\n    {...punchCardsPanel}\n  />\n}\n\nPunchCardsPanel.propTypes = {\n  onDeletePunchCard: PropTypes.func,\n  onSelectPunchCard: PropTypes.func,\n  onDismiss: PropTypes.func,\n  isOpen: PropTypes.bool,\n  items: PropTypes.array,\n}\n\nPunchCardsPanel.defaultProps =  {\n  items: [],\n}\n\nexport default React.memo(PunchCardsPanel)\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {IconButton, DefaultButton} from '@fluentui/react'\nimport PunchCardsPanel from './PunchCardsPanel'\n\nconst ShowPunchCardsButtonLayout = ({\n  iconButton0, defaultButotn0, punchCardsPanel\n}) => (\n  <>\n    <IconButton\n      {...iconButton0}\n    />\n    <DefaultButton\n      {...defaultButotn0}\n    />\n    <PunchCardsPanel {...punchCardsPanel}/>\n  </>\n);\nconst ShowPunchCardsButton = ({\n  onClick, disabled,\n  items, isOpenPanel,\n  onDismiss, onDeletePunchCard,\n  onSelectPunchCard,\n}) => {\n\n  const showPunchCardsButton = {\n    iconButton0: {\n      type: 'submit',\n      disabled,\n      className: 'ms-hiddenMdUp',\n      title: 'Show Punch Cards',\n      iconProps:{\n        iconName: 'RedEye'\n      },\n      onClick\n    },\n    defaultButotn0: {\n      className:\"ms-hiddenSm\",\n      disabled,\n      type:\"submit\",\n      iconProps:{\n        iconName: 'RedEye'\n      },\n      text: 'Show Punch Cards',\n      title: 'Show Punch Cards',\n      onClick\n    },\n    punchCardsPanel: {\n      items,\n      isOpen: isOpenPanel,\n      onDismiss, onDeletePunchCard,\n      onSelectPunchCard,\n    }\n  }\n\n  return <ShowPunchCardsButtonLayout {...showPunchCardsButton} />\n}\n\nShowPunchCardsButton.propTypes = {\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  isOpenPanel: PropTypes.bool,\n  items: PropTypes.array,\n  onDeletePunchCard: PropTypes.func,\n  onSelectPunchCard: PropTypes.func,\n}\n\nShowPunchCardsButton.defaultProps = {\n  items: []\n}\n\nexport default React.memo(ShowPunchCardsButton);\n","import React from 'react';\nimport {Stack} from '@fluentui/react'\nimport PropTypes from 'prop-types'\nimport PunchCard from './PunchCard'\nimport NewPunchCardForm from './NewPunchCardForm'\nimport PunchCardsPanel from './ShowPunchCardsButton/PunchCardsPanel'\nimport ShowPunchCardsButton from './ShowPunchCardsButton'\n\nconst PunchCardAppLayout = ({\n  selectedPunchCard, newPunchCardForm,\n  punchCardsPanel, showPunchCardsButton\n}) => (\n  <Stack tokens={{childrenGap: 10}}>\n    <Stack.Item>\n      <Stack horizontal tokens={{childrenGap: 10}}>\n        <NewPunchCardForm {...newPunchCardForm}/>\n        <ShowPunchCardsButton {...showPunchCardsButton}/>\n      </Stack>\n    </Stack.Item>\n    <PunchCard {...selectedPunchCard}/>\n    <PunchCardsPanel {...punchCardsPanel} />\n  </Stack>\n);\n\nconst PunchCardApp =  ({\n  onAddPunchCard,\n  punchCards,\n  selectedPunchCard,\n\n  isOpenPunchCardsPanel, onDismissPunchCardPanel,\n  onDeletePunchCard, onSelectPunchCard,\n  onClickShowPunchCardsButton,\n\n  onEditPunchCard\n}) => {\n\n  const punchCardApp = {\n    selectedPunchCard: {\n      ...selectedPunchCard,\n      onChangeGoal: onEditPunchCard,\n      onUpdatePunchSlot: onEditPunchCard,\n      onAddPunchedSlot: onEditPunchCard,\n      onAddScheduledSlot: onEditPunchCard,\n      onDeleteScheduledSlot: onEditPunchCard,\n      onChangeScheduledSlot: onEditPunchCard\n    },\n    newPunchCardForm: {\n      onSubmit: React.useCallback(async(punchCardName) => {\n        await onAddPunchCard(punchCardName)\n      },[onAddPunchCard])\n    },\n    showPunchCardsButton: {\n      isOpenPanel: isOpenPunchCardsPanel,\n      items: punchCards,\n      onDeletePunchCard, onSelectPunchCard,\n      onDismiss: onDismissPunchCardPanel,\n      disabled: React.useMemo(() => !punchCards.length, [punchCards.length]),\n      onClick: onClickShowPunchCardsButton\n    }\n  }\n\n  return <PunchCardAppLayout {...punchCardApp} />\n}\n\nPunchCardApp.propTypes = {\n  selectedPunchCard: PropTypes.object,\n  onAddPunchCard: PropTypes.func,\n  onDismissPunchCardPanel: PropTypes.func,\n  onClickShowPunchCardsButton: PropTypes.func,\n  punchCards: PropTypes.array,\n  isOpenPunchCardsPanel: PropTypes.bool,\n  onDeletePunchCard: PropTypes.func,\n  onSelectPunchCard: PropTypes.func,\n  onEditPunchCard: PropTypes.func\n}\n\nPunchCardApp.defaultProps = {\n  punchCards: [],\n  isOpenPunchCardsPanel: false\n}\n\n/*\nconst PunchCardApp1 = ({\n  punchCard, onEditPunchCard,\n  onAddNewPunchCard\n}) => {\n\n  const [state, setState] = React.useState({\n    punchCardPanel: {\n      isOpen: false\n    }\n  })\n\n  const updatePunchCardPanel = React.useCallback((update) => {\n    setState(currentState => ({\n      ...currentState,\n      punchCardPanel: {\n        ...currentState.punchCardPanel,\n        ...update\n      }\n    }))\n  }, [])\n\n  const punchCardApp = {\n    newPunchCardForm: {\n      onSubmit: React.useCallback((title) => {\n        const newPunchCard = {\n          title,\n          id: uuid(),\n          goalForTheDay: {\n            hours: '09',\n            minutes: '00'\n          },\n          punchedSlots: [],\n          scheduledSlots: []\n        }\n        onAddNewPunchCard(newPunchCard);\n      }, [onAddNewPunchCard])\n    },\n    punchCard: {\n      ...punchCard,\n      onChangeGoal: onEditPunchCard,\n      onUpdatePunchSlot: onEditPunchCard,\n      onAddPunchedSlot: onEditPunchCard,\n      onClickAddScheduledSlot: onEditPunchCard,\n      onAddScheduledSlot: onEditPunchCard,\n      onDeleteScheduledSlot: onEditPunchCard,\n      onChangeScheduledSlot: onEditPunchCard\n    },\n    punchCardsPanel: {\n      isOpen: state.punchCardPanel.isOpen,\n      items: [],\n      onSelectPunchCard: () => {},\n      onDeletePunchCard: () => {},\n      onDismiss: React.useCallback(() => {\n        updatePunchCardPanel({\n          isOpen: false\n        })\n      },[updatePunchCardPanel]),\n    },\n    showPunchCardsButton: {\n      onClick: React.useCallback(() => {\n        updatePunchCardPanel({\n          isOpen: true\n        })\n      },[updatePunchCardPanel])\n    }\n  }\n\n  return <PunchCardAppLayout {...punchCardApp} />\n}\n\nPunchCardApp1.propTypes = {\n  onEditPunchCard: PropTypes.func,\n  onAddNewPunchCard: PropTypes.func,\n  punchCard: PropTypes.object\n}\n*/\nexport default React.memo(PunchCardApp);\n","import Dexie from 'dexie'\n\nconst db = new Dexie('MyDb');\n\ndb.version(1)\n  .stores({\n    punchCards: \"++id\"\n  })\n\ndb.open()\n\nexport default db;\n","import React from 'react'\nimport PunchCardApp from './apps/PunchCardApp'\nimport db from './db'\nimport {v4 as uuid} from 'uuid'\n\nconst App = () => {\n  const [state, setState] = React.useState({\n    punchCards: [],\n    selectedPunchCard: null,\n    isOpenPunchCardsPanel: false\n  })\n\n  const  punchCardApp = {\n    ...state,\n    onAddPunchCard: React.useCallback(async(title) => {\n      const newPunchCard = {\n        id: uuid(),\n        title,\n        punchedSlots: [],\n        scheduledSlots: [],\n        goalForTheDay: {\n          hours: '09',\n          minutes: '00'\n        }\n      };\n      await db.punchCards.add(newPunchCard)\n      setState(currentState => ({\n        punchCards: [\n          newPunchCard,\n          ...currentState.punchCards,\n        ],\n        isOpenPunchCardsPanel: true\n      }))\n    },[]),\n    onDismissPunchCardPanel: React.useCallback(() => {\n      setState(currentState => ({\n        ...currentState,\n        isOpenPunchCardsPanel: false\n      }))\n    },[]),\n    onOpenPunchCardPanel: React.useCallback(() => {\n      setState(currentState => ({\n        ...currentState,\n        isOpenPunchCardsPanel: true\n      }))\n    },[]),\n    onDeletePunchCard: React.useCallback(async (id) => {\n      await db.punchCards.delete(id);\n      setState(currentState => {\n        const punchCards = currentState.punchCards\n          .filter(punchCard => id !== punchCard.id)\n        const isOpenPunchCardsPanel = Boolean(punchCards.length);\n        const selectedPunchCard = (() => {\n          if(!currentState.selectedPunchCard) return null\n          const isSelectedPunchCard = id === currentState.selectedPunchCard.id;\n          if(isSelectedPunchCard) return null\n          return currentState.selectedPunchCard\n        })()\n        return {\n          ...currentState,\n          isOpenPunchCardsPanel,\n          punchCards,\n          selectedPunchCard\n        }\n      })\n    },[]),\n    onSelectPunchCard: React.useCallback(async(id) => {\n      const selectedPunchCard = await db.punchCards.get(id)\n      setState(currentState => ({\n        ...currentState,\n        selectedPunchCard,\n        isOpenPunchCardsPanel: false\n      }))\n    },[]),\n    onEditPunchCard: React.useCallback(async({id, ...update}) => {\n      await db.punchCards.update(id, update);\n      setState(currentState => {\n        const updatedPunchCards = currentState.punchCards\n          .map(punchCard => punchCard.id === id ? ({\n            ...punchCard,\n            ...update\n          }) : punchCard);\n        console.log({update})\n        return {\n          ...currentState,\n          punchCards: updatedPunchCards,\n          selectedPunchCard: {\n            ...currentState.selectedPunchCard,\n            ...update\n          }\n        }\n      })\n    },[]),\n    onClickShowPunchCardsButton: React.useCallback(() => {\n      setState(currentState => ({\n        ...currentState,\n        isOpenPunchCardsPanel: true\n      }))\n    },[]),\n  }\n\n  React.useEffect(() => {\n    db.punchCards.toArray(punchCards => {\n      if(punchCards.length) {\n        setState(currentState => ({\n          punchCards,\n          isOpenPunchCardsPanel: true\n        }))\n      }\n    })\n  },[])\n\n  return <PunchCardApp {...punchCardApp}  />\n}\n\nexport default React.memo(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fluentui/react/dist/css/fabric.min.css'\nimport { initializeIcons } from '@uifabric/icons';\n\ninitializeIcons();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}